/* SparqlParser.java */
/* Generated By:JavaCC: Do not edit this line. SparqlParser.java */
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package rdf.parser ;

import org.apache.jena.graph.* ;
import org.apache.jena.query.* ;
import org.apache.jena.sparql.core.Var ;
import org.apache.jena.sparql.syntax.* ;
import org.apache.jena.sparql.expr.* ;
import org.apache.jena.sparql.path.* ;
import org.apache.jena.sparql.expr.aggregate.* ;
import org.apache.jena.sparql.expr.aggregate.lib.* ;
import org.apache.jena.update.* ;
import org.apache.jena.sparql.modify.request.* ;


public class SparqlParser implements SparqlParserConstants //extends PARSERBASE
{
ElementPathBlock tempAcc = new ElementPathBlock() ;
String type = "";
String mode = "";

// Common top for single entry point.
  final public void Top() throws ParseException {
    if (jj_2_1(3)) {
      Query();
mode = "query" ;
    } else {
      Update();
mode = "update" ;
    }
    jj_consume_token(0);
}

// Query only entry point
  final public void QueryUnit() throws ParseException {
    Query();
    jj_consume_token(0);
}

  final public void Query() throws ParseException {
    Prologue();
    if (jj_2_2(3)) {
      SelectQuery();
type = "select" ;
    } else if (jj_2_3(3)) {
      ConstructQuery();
type = "construct" ;
    } else if (jj_2_4(3)) {
      DescribeQuery();
type = "describe" ;
    } else if (jj_2_5(3)) {
      AskQuery();
type = "ask" ;
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    ValuesClause();
}

  final public void UpdateUnit() throws ParseException {
    Update();
    jj_consume_token(0);
}

  final public void Prologue() throws ParseException {
    label_1:
    while (true) {
      if (jj_2_6(3)) {
        ;
      } else {
        break label_1;
      }
      if (jj_2_7(3)) {
        BaseDecl();
      } else if (jj_2_8(3)) {
        PrefixDecl();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
}

  final public void BaseDecl() throws ParseException {Token t ; String iri ;
    t = jj_consume_token(BASE);
    IRIREF();
}

  final public void PrefixDecl() throws ParseException {Token t ; String iri ;
    jj_consume_token(PREFIX);
    t = jj_consume_token(PNAME_NS);
    IRIREF();
}

// ---- Query type clauses
  final public 
void SelectQuery() throws ParseException {
    SelectClause();
    label_2:
    while (true) {
      if (jj_2_9(3)) {
        ;
      } else {
        break label_2;
      }
      DatasetClause();
    }
    WhereClause();
    SolutionModifier();
}

  final public void SubSelect() throws ParseException {
    SelectClause();
    WhereClause();
    SolutionModifier();
    ValuesClause();
}

  final public void SelectClause() throws ParseException {Var v ; Expr expr ; Node n ;
    jj_consume_token(SELECT);
    if (jj_2_12(3)) {
      if (jj_2_10(3)) {
        jj_consume_token(DISTINCT);
      } else if (jj_2_11(3)) {
        jj_consume_token(REDUCED);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      ;
    }
    if (jj_2_16(3)) {
      label_3:
      while (true) {
        if (jj_2_13(3)) {
          Var();
        } else if (jj_2_14(3)) {
          jj_consume_token(LPAREN);
          Expression();
          jj_consume_token(AS);
          Var();
          jj_consume_token(RPAREN);
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        if (jj_2_15(3)) {
          ;
        } else {
          break label_3;
        }
      }
    } else if (jj_2_17(3)) {
      jj_consume_token(STAR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void ConstructQuery() throws ParseException {Template t ;
                          TripleCollectorBGP acc = new TripleCollectorBGP() ;
    jj_consume_token(CONSTRUCT);
    if (jj_2_21(3)) {
      ConstructTemplate();
      label_4:
      while (true) {
        if (jj_2_18(3)) {
          ;
        } else {
          break label_4;
        }
        DatasetClause();
      }
      WhereClause();
      SolutionModifier();
    } else if (jj_2_22(3)) {
      label_5:
      while (true) {
        if (jj_2_19(3)) {
          ;
        } else {
          break label_5;
        }
        DatasetClause();
      }
      jj_consume_token(WHERE);
      jj_consume_token(LBRACE);
      if (jj_2_20(3)) {
        TriplesTemplate(acc);
      } else {
        ;
      }
      jj_consume_token(RBRACE);
      SolutionModifier();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void DescribeQuery() throws ParseException {Node n ;
    jj_consume_token(DESCRIBE);
    if (jj_2_24(3)) {
      label_6:
      while (true) {
        VarOrIri();
        if (jj_2_23(3)) {
          ;
        } else {
          break label_6;
        }
      }
    } else if (jj_2_25(3)) {
      jj_consume_token(STAR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    label_7:
    while (true) {
      if (jj_2_26(3)) {
        ;
      } else {
        break label_7;
      }
      DatasetClause();
    }
    if (jj_2_27(3)) {
      WhereClause();
    } else {
      ;
    }
    SolutionModifier();
}

  final public void AskQuery() throws ParseException {
    jj_consume_token(ASK);
    label_8:
    while (true) {
      if (jj_2_28(3)) {
        ;
      } else {
        break label_8;
      }
      DatasetClause();
    }
    WhereClause();
    SolutionModifier();
}

// ----
  final public 
void DatasetClause() throws ParseException {
    jj_consume_token(FROM);
    if (jj_2_29(3)) {
      DefaultGraphClause();
    } else if (jj_2_30(3)) {
      NamedGraphClause();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void DefaultGraphClause() throws ParseException {String iri ;
    SourceSelector();
}

  final public void NamedGraphClause() throws ParseException {String iri ;
    jj_consume_token(NAMED);
    SourceSelector();
}

  final public void SourceSelector() throws ParseException {String iri ;
    iri();
}

  final public void WhereClause() throws ParseException {Element el ;
    if (jj_2_31(3)) {
      jj_consume_token(WHERE);
    } else {
      ;
    }
    GroupGraphPattern();
}

  final public void SolutionModifier() throws ParseException {
    if (jj_2_32(3)) {
      GroupClause();
    } else {
      ;
    }
    if (jj_2_33(3)) {
      HavingClause();
    } else {
      ;
    }
    if (jj_2_34(3)) {
      OrderClause();
    } else {
      ;
    }
    if (jj_2_35(3)) {
      LimitOffsetClauses();
    } else {
      ;
    }
}

  final public void GroupClause() throws ParseException {
    jj_consume_token(GROUP);
    jj_consume_token(BY);
    label_9:
    while (true) {
      GroupCondition();
      if (jj_2_36(3)) {
        ;
      } else {
        break label_9;
      }
    }
}

  final public void GroupCondition() throws ParseException {Var v = null ; Expr expr = null ;
    if (jj_2_38(3)) {
      BuiltInCall();
    } else if (jj_2_39(3)) {
      FunctionCall();
    } else if (jj_2_40(3)) {
      jj_consume_token(LPAREN);
      Expression();
      if (jj_2_37(3)) {
        jj_consume_token(AS);
        Var();
      } else {
        ;
      }
      jj_consume_token(RPAREN);
    } else if (jj_2_41(3)) {
      Var();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void HavingClause() throws ParseException {
    jj_consume_token(HAVING);
    label_10:
    while (true) {
      HavingCondition();
      if (jj_2_42(3)) {
        ;
      } else {
        break label_10;
      }
    }
}

  final public void HavingCondition() throws ParseException {Expr c ;
    Constraint();
}

  final public void OrderClause() throws ParseException {
    jj_consume_token(ORDER);
    jj_consume_token(BY);
    label_11:
    while (true) {
      OrderCondition();
      if (jj_2_43(3)) {
        ;
      } else {
        break label_11;
      }
    }
}

  final public void OrderCondition() throws ParseException {int direction = 0 ; Expr expr = null ; Node v = null ;
    if (jj_2_48(3)) {
      if (jj_2_44(3)) {
        jj_consume_token(ASC);
direction = Query.ORDER_ASCENDING ;
      } else if (jj_2_45(3)) {
        jj_consume_token(DESC);
direction = Query.ORDER_DESCENDING ;
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      BrackettedExpression();
    } else if (jj_2_49(3)) {
      if (jj_2_46(3)) {
        Constraint();
      } else if (jj_2_47(3)) {
        Var();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void LimitOffsetClauses() throws ParseException {
    if (jj_2_52(3)) {
      LimitClause();
      if (jj_2_50(3)) {
        OffsetClause();
      } else {
        ;
      }
    } else if (jj_2_53(3)) {
      OffsetClause();
      if (jj_2_51(3)) {
        LimitClause();
      } else {
        ;
      }
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void LimitClause() throws ParseException {Token t ;
    jj_consume_token(LIMIT);
    t = jj_consume_token(INTEGER);
}

  final public void OffsetClause() throws ParseException {Token t ;
    jj_consume_token(OFFSET);
    t = jj_consume_token(INTEGER);
}

  final public void ValuesClause() throws ParseException {Token t ;
    if (jj_2_54(3)) {
      t = jj_consume_token(VALUES);
      DataBlock();
    } else {
      ;
    }
}

// Strict SPARQL 1.1 : mandatory separator, optional terminator.
  final public void Update() throws ParseException {
    Prologue();
    if (jj_2_56(3)) {
      Update1();
      if (jj_2_55(3)) {
        jj_consume_token(SEMICOLON);
        Update();
      } else {
        ;
      }
    } else {
      ;
    }
}

  final public void Update1() throws ParseException {Update up = null ;
    if (jj_2_57(3)) {
      Load();
type = "load";
    } else if (jj_2_58(3)) {
      Clear();
type = "clear";
    } else if (jj_2_59(3)) {
      Drop();
type = "drop";
    } else if (jj_2_60(3)) {
      Add();
type = "add";
    } else if (jj_2_61(3)) {
      Move();
type = "move";
    } else if (jj_2_62(3)) {
      Copy();
type = "copy";
    } else if (jj_2_63(3)) {
      Create();
type = "create";
    } else if (jj_2_64(3)) {
      DeleteWhere();
type = "deleteWhere";
    } else if (jj_2_65(3)) {
      Modify();
type = "modify";
    } else if (jj_2_66(3)) {
      InsertData();
type = "insertData";
    } else if (jj_2_67(3)) {
      DeleteData();
type = "deleteData";
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void Load() throws ParseException {String url ; Node dest = null ; boolean silent = false ;
    jj_consume_token(LOAD);
    if (jj_2_68(3)) {
      jj_consume_token(SILENT);
silent = true ;
    } else {
      ;
    }
    iri();
    if (jj_2_69(3)) {
      jj_consume_token(INTO);
      GraphRef();
    } else {
      ;
    }
}

  final public void Clear() throws ParseException {boolean silent = false ; Target target ;
    jj_consume_token(CLEAR);
    if (jj_2_70(3)) {
      jj_consume_token(SILENT);
silent = true ;
    } else {
      ;
    }
    GraphRefAll();
}

  final public void Drop() throws ParseException {boolean silent = false ; Target target ;
    jj_consume_token(DROP);
    if (jj_2_71(3)) {
      jj_consume_token(SILENT);
silent = true ;
    } else {
      ;
    }
    GraphRefAll();
}

  final public void Create() throws ParseException {Node iri ; boolean silent = false ;
    jj_consume_token(CREATE);
    if (jj_2_72(3)) {
      jj_consume_token(SILENT);
silent=true ;
    } else {
      ;
    }
    GraphRef();
}

  final public void Add() throws ParseException {Target src ; Target dest ; boolean silent = false ;
    jj_consume_token(ADD);
    if (jj_2_73(3)) {
      jj_consume_token(SILENT);
silent=true ;
    } else {
      ;
    }
    GraphOrDefault();
    jj_consume_token(TO);
    GraphOrDefault();
}

  final public void Move() throws ParseException {Target src ; Target dest ; boolean silent = false ;
    jj_consume_token(MOVE);
    if (jj_2_74(3)) {
      jj_consume_token(SILENT);
silent=true ;
    } else {
      ;
    }
    GraphOrDefault();
    jj_consume_token(TO);
    GraphOrDefault();
}

  final public void Copy() throws ParseException {Target src ; Target dest ; boolean silent = false ;
    jj_consume_token(COPY);
    if (jj_2_75(3)) {
      jj_consume_token(SILENT);
silent=true ;
    } else {
      ;
    }
    GraphOrDefault();
    jj_consume_token(TO);
    GraphOrDefault();
}

  final public void InsertData() throws ParseException {QuadDataAccSink qd = null ; Token t ;
    t = jj_consume_token(INSERT_DATA);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    QuadData(qd);
}

  final public void DeleteData() throws ParseException {QuadDataAccSink qd = null ; Token t ;
    t = jj_consume_token(DELETE_DATA);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    QuadData(qd);
}

  final public void DeleteWhere() throws ParseException {QuadAcc qp = new QuadAcc() ;  Token t ;
    t = jj_consume_token(DELETE_WHERE);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    QuadPattern(qp);
}

  final public void Modify() throws ParseException {Element el ; String iri = null ;
                    UpdateModify up = null ;
    if (jj_2_76(3)) {
      jj_consume_token(WITH);
      iri();
    } else {
      ;
    }
    if (jj_2_78(3)) {
      DeleteClause(up);
      if (jj_2_77(3)) {
        InsertClause(up);
      } else {
        ;
      }
    } else if (jj_2_79(3)) {
      InsertClause(up);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    label_12:
    while (true) {
      if (jj_2_80(3)) {
        ;
      } else {
        break label_12;
      }
      UsingClause(up);
    }
    jj_consume_token(WHERE);
    GroupGraphPattern();
}

  final public void DeleteClause(UpdateModify up) throws ParseException {QuadAcc qp = null ;  Token t ;
    t = jj_consume_token(DELETE);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    QuadPattern(qp);
}

  final public void InsertClause(UpdateModify up) throws ParseException {QuadAcc qp = null ; Token t ;
    t = jj_consume_token(INSERT);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    QuadPattern(qp);
}

  final public void UsingClause(UpdateWithUsing update) throws ParseException {String iri ; Node n ;
    jj_consume_token(USING);
    if (jj_2_81(3)) {
      iri();
    } else if (jj_2_82(3)) {
      jj_consume_token(NAMED);
      iri();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void GraphOrDefault() throws ParseException {String iri ;
    if (jj_2_84(3)) {
      jj_consume_token(DFT);
    } else if (jj_2_85(3)) {
      if (jj_2_83(3)) {
        jj_consume_token(GRAPH);
      } else {
        ;
      }
      iri();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void GraphRef() throws ParseException {String iri ;
    jj_consume_token(GRAPH);
    iri();
}

  final public void GraphRefAll() throws ParseException {Node iri ;
    if (jj_2_86(3)) {
      GraphRef();
    } else if (jj_2_87(3)) {
      jj_consume_token(DFT);
    } else if (jj_2_88(3)) {
      jj_consume_token(NAMED);
    } else if (jj_2_89(3)) {
      jj_consume_token(ALL);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void QuadPattern(QuadAcc acc) throws ParseException {
    jj_consume_token(LBRACE);
    Quads(acc);
    jj_consume_token(RBRACE);
}

//Ground data : As QuadPattern but don't allow variables.
  final public void QuadData(QuadDataAccSink acc) throws ParseException {
    jj_consume_token(LBRACE);
    Quads(acc);
    jj_consume_token(RBRACE);
}

  final public void Quads(QuadAccSink acc) throws ParseException {
    if (jj_2_90(3)) {
      TriplesTemplate(acc);
    } else {
      ;
    }
    label_13:
    while (true) {
      if (jj_2_91(3)) {
        ;
      } else {
        break label_13;
      }
      QuadsNotTriples(acc);
      if (jj_2_92(3)) {
        jj_consume_token(DOT);
      } else {
        ;
      }
      if (jj_2_93(3)) {
        TriplesTemplate(acc);
      } else {
        ;
      }
    }
}

  final public void QuadsNotTriples(QuadAccSink acc) throws ParseException {Node gn ; Node prev = acc.getGraph() ;
    jj_consume_token(GRAPH);
    VarOrIri();
    jj_consume_token(LBRACE);
    if (jj_2_94(3)) {
      TriplesTemplate(acc);
    } else {
      ;
    }
    jj_consume_token(RBRACE);
}

  final public void TriplesTemplate(TripleCollector acc) throws ParseException {
    TriplesSameSubject(acc);
    if (jj_2_96(3)) {
      jj_consume_token(DOT);
      if (jj_2_95(3)) {
        TriplesTemplate(acc);
      } else {
        ;
      }
    } else {
      ;
    }
}

// ---- General Graph Pattern 
  final public 
void GroupGraphPattern() throws ParseException {Element el = null ; Token t ;
    t = jj_consume_token(LBRACE);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    if (jj_2_97(3)) {
      SubSelect();
    } else {
      GroupGraphPatternSub();
    }
    jj_consume_token(RBRACE);
}

  final public void GroupGraphPatternSub() throws ParseException {Element el = null ;
    if (jj_2_98(3)) {
      TriplesBlock(null);
    } else {
      ;
    }
    label_14:
    while (true) {
      if (jj_2_99(3)) {
        ;
      } else {
        break label_14;
      }
      GraphPatternNotTriples();
      if (jj_2_100(3)) {
        jj_consume_token(DOT);
      } else {
        ;
      }
      if (jj_2_101(3)) {
        TriplesBlock(null);
      } else {
        ;
      }
    }
}

  final public void TriplesBlock(ElementPathBlock acc) throws ParseException {
    TriplesSameSubjectPath(acc);
    if (jj_2_103(3)) {
      jj_consume_token(DOT);
      if (jj_2_102(3)) {
        TriplesBlock(acc);
      } else {
        ;
      }
    } else {
      ;
    }
}

// -----
  final public 
void GraphPatternNotTriples() throws ParseException {Element el = null ;
    if (jj_2_104(3)) {
      GroupOrUnionGraphPattern();
    } else if (jj_2_105(3)) {
      OptionalGraphPattern();
    } else if (jj_2_106(3)) {
      MinusGraphPattern();
    } else if (jj_2_107(3)) {
      GraphGraphPattern();
    } else if (jj_2_108(3)) {
      ServiceGraphPattern();
    } else if (jj_2_109(3)) {
      Filter();
    } else if (jj_2_110(3)) {
      Bind();
    } else if (jj_2_111(3)) {
      InlineData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

// ---- Definitions of each pattern element
  final public 
void OptionalGraphPattern() throws ParseException {Element el ;
    jj_consume_token(OPTIONAL);
    GroupGraphPattern();
}

  final public void GraphGraphPattern() throws ParseException {Element el ; Node n ;
    jj_consume_token(GRAPH);
    VarOrIri();
    GroupGraphPattern();
}

  final public void ServiceGraphPattern() throws ParseException {Element el ; Node n ; boolean silent = false ;
    jj_consume_token(SERVICE);
    if (jj_2_112(3)) {
      jj_consume_token(SILENT);
silent=true;
    } else {
      ;
    }
    VarOrIri();
    GroupGraphPattern();
}

  final public void Bind() throws ParseException {Var v ; Expr expr ;
    jj_consume_token(BIND);
    jj_consume_token(LPAREN);
    Expression();
    jj_consume_token(AS);
    Var();
    jj_consume_token(RPAREN);
}

  final public void InlineData() throws ParseException {ElementData el = null ; Token t ;
    t = jj_consume_token(VALUES);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    DataBlock();
}

  final public void DataBlock() throws ParseException {
    if (jj_2_113(3)) {
      InlineDataOneVar();
    } else if (jj_2_114(3)) {
      InlineDataFull();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void InlineDataOneVar() throws ParseException {Var v ; Node n ; Token t ; ; int beginLine; int beginColumn;
    Var();
    t = jj_consume_token(LBRACE);
beginLine = t.beginLine; beginColumn = t.beginColumn; t = null;
    label_15:
    while (true) {
      if (jj_2_115(3)) {
        ;
      } else {
        break label_15;
      }
      DataBlockValue();
    }
    t = jj_consume_token(RBRACE);
}

  final public void InlineDataFull() throws ParseException {Var v ; Node n ; Token t ; int beginLine; int beginColumn;
    if (jj_2_117(3)) {
      jj_consume_token(NIL);
    } else if (jj_2_118(3)) {
      jj_consume_token(LPAREN);
      label_16:
      while (true) {
        if (jj_2_116(3)) {
          ;
        } else {
          break label_16;
        }
        Var();
      }
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(LBRACE);
    label_17:
    while (true) {
      if (jj_2_119(3)) {
        ;
      } else {
        break label_17;
      }
      if (jj_2_121(3)) {
        t = jj_consume_token(LPAREN);
beginLine = t.beginLine; beginColumn = t.beginColumn; t = null;
        label_18:
        while (true) {
          if (jj_2_120(3)) {
            ;
          } else {
            break label_18;
          }
          DataBlockValue();
        }
        t = jj_consume_token(RPAREN);
beginLine = t.beginLine; beginColumn = t.beginColumn; t = null;
      } else if (jj_2_122(3)) {
        t = jj_consume_token(NIL);
beginLine = t.beginLine; beginColumn = t.beginColumn; t = null;
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    jj_consume_token(RBRACE);
}

  final public void DataBlockValue() throws ParseException {Node n = null ; String iri ;
    if (jj_2_123(3)) {
      iri();
    } else if (jj_2_124(3)) {
      RDFLiteral();
    } else if (jj_2_125(3)) {
      NumericLiteral();
    } else if (jj_2_126(3)) {
      BooleanLiteral();
    } else if (jj_2_127(3)) {
      jj_consume_token(UNDEF);
    } else if (jj_2_128(3)) {
      QuotedTripleData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void MinusGraphPattern() throws ParseException {Element el ;
    jj_consume_token(MINUS_P);
    GroupGraphPattern();
}

// Element UnionGraphPattern() : { Element el ; }
// {
//     <UNION>
//     GroupGraphPattern()
//     
// }


// SPARQL 1.0: {pattern} UNION {pattern} UNION {pattern} ... :: 
// SPARQL 1.1 may introduce: { pattern UNION pattern UNION ... }


// G (union G)* can be a single group pattern
// or a group pattern as part of an union.
  final public void GroupOrUnionGraphPattern() throws ParseException {Element el = null ; ElementUnion el2 = null ;
    GroupGraphPattern();
    label_19:
    while (true) {
      if (jj_2_129(3)) {
        ;
      } else {
        break label_19;
      }
      jj_consume_token(UNION);
      GroupGraphPattern();
    }
}

  final public void Filter() throws ParseException {Expr c ;
    jj_consume_token(FILTER);
    Constraint();
}

  final public void Constraint() throws ParseException {Expr c ;
    if (jj_2_130(3)) {
      BrackettedExpression();
    } else if (jj_2_131(3)) {
      BuiltInCall();
    } else if (jj_2_132(3)) {
      FunctionCall();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void FunctionCall() throws ParseException {String fname ; Args a ;
    iri();
    ArgList();
}

  final public void ArgList() throws ParseException {Expr expr ; Args args = new Args() ; Token t ;
    if (jj_2_135(3)) {
      jj_consume_token(NIL);
    } else if (jj_2_136(3)) {
      jj_consume_token(LPAREN);
      if (jj_2_133(3)) {
        t = jj_consume_token(DISTINCT);
args.distinct = true ;
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
      } else {
        ;
      }
      Expression();
      label_20:
      while (true) {
        if (jj_2_134(3)) {
          ;
        } else {
          break label_20;
        }
        jj_consume_token(COMMA);
        Expression();
      }
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void ExpressionList() throws ParseException {Expr expr = null ; ExprList exprList = new ExprList() ;
    if (jj_2_138(3)) {
      jj_consume_token(NIL);
    } else if (jj_2_139(3)) {
      jj_consume_token(LPAREN);
      Expression();
exprList.add(expr) ;
      label_21:
      while (true) {
        if (jj_2_137(3)) {
          ;
        } else {
          break label_21;
        }
        jj_consume_token(COMMA);
        Expression();
exprList.add(expr) ;
      }
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

// -------- Construct patterns
  final public void ConstructTemplate() throws ParseException {TripleCollectorBGP acc = new TripleCollectorBGP();
                                 Template t = new Template(acc.getBGP()) ;
    jj_consume_token(LBRACE);
    if (jj_2_140(3)) {
      ConstructTriples(acc);
    } else {
      ;
    }
    jj_consume_token(RBRACE);
}

  final public void ConstructTriples(TripleCollector acc) throws ParseException {
    TriplesSameSubject(acc);
    if (jj_2_142(3)) {
      jj_consume_token(DOT);
      if (jj_2_141(3)) {
        ConstructTriples(acc);
      } else {
        ;
      }
    } else {
      ;
    }
}

// -------- Triple lists with property and object lists
// -------- Without paths: entry: TriplesSameSubject
  final public void TriplesSameSubject(TripleCollector acc) throws ParseException {Node s = null;
    if (jj_2_143(3)) {
      VarOrTerm();
      PropertyListNotEmpty(s, acc);
    } else if (jj_2_144(3)) {
      TriplesNode(tempAcc);
      PropertyList(s, tempAcc);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PropertyList(Node s, TripleCollector acc) throws ParseException {
    if (jj_2_145(3)) {
      PropertyListNotEmpty(s, acc);
    } else {
      ;
    }
}

  final public void PropertyListNotEmpty(Node s, TripleCollector acc) throws ParseException {Node p = null ;
    Verb();
    ObjectList(s, p, null, acc);
    label_22:
    while (true) {
      if (jj_2_146(3)) {
        ;
      } else {
        break label_22;
      }
      jj_consume_token(SEMICOLON);
      if (jj_2_147(3)) {
        Verb();
        ObjectList(s, p, null, acc);
      } else {
        ;
      }
    }
}

  final public void Verb() throws ParseException {Node p ;
    if (jj_2_148(3)) {
      VarOrIri();
    } else if (jj_2_149(3)) {
      jj_consume_token(KW_A);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void ObjectList(Node s,  Node p, Path path, TripleCollector acc) throws ParseException {Node o ;
    Object(s, p, path, acc);
    label_23:
    while (true) {
      if (jj_2_150(3)) {
        ;
      } else {
        break label_23;
      }
      jj_consume_token(COMMA);
      Object(s, p, path, acc);
    }
}

  final public void Object(Node s, Node p, Path path, TripleCollector acc) throws ParseException {Node o = null;
    GraphNode(tempAcc);
    Annotation(acc, s, p, path, o);
}

// -------- BGPs with paths.
// -------- Entry point: TriplesSameSubjectPath
  final public 
void TriplesSameSubjectPath(TripleCollector acc) throws ParseException {Node s = null;
    if (jj_2_151(3)) {
      VarOrTerm();
      PropertyListPathNotEmpty(s, acc);
    } else if (jj_2_152(3)) {
      TriplesNodePath(tempAcc);
      PropertyListPath(s, tempAcc);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PropertyListPath(Node s, TripleCollector acc) throws ParseException {
    if (jj_2_153(3)) {
      PropertyListPathNotEmpty(s, acc);
    } else {
      ;
    }
}

  final public void PropertyListPathNotEmpty(Node s, TripleCollector acc) throws ParseException {Path path = null ; Node p = null ;
    if (jj_2_154(3)) {
      VerbPath();
    } else if (jj_2_155(3)) {
      VerbSimple();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    ObjectListPath(s, p, path, acc);
    label_24:
    while (true) {
      if (jj_2_156(3)) {
        ;
      } else {
        break label_24;
      }
      jj_consume_token(SEMICOLON);
      if (jj_2_159(3)) {
        if (jj_2_157(3)) {
          VerbPath();
        } else if (jj_2_158(3)) {
          VerbSimple();
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        ObjectListPath(s, p, path, acc);
      } else {
        ;
      }
    }
}

  final public void VerbPath() throws ParseException {Node p ; Path path ;
    Path();
}

  final public void VerbSimple() throws ParseException {Node p ;
    Var();
}

  final public void ObjectListPath(Node s,  Node p, Path path, TripleCollector acc) throws ParseException {Node o ;
    ObjectPath(s, p, path, acc);
    label_25:
    while (true) {
      if (jj_2_160(3)) {
        ;
      } else {
        break label_25;
      }
      jj_consume_token(COMMA);
      ObjectPath(s, p, path, acc);
    }
}

  final public void ObjectPath(Node s, Node p, Path path, TripleCollector acc) throws ParseException {Node o = null;
    GraphNodePath(tempAcc);
    AnnotationPath(acc, s, p, path, o);
}

// End paths stuff.

// -------- Paths


// Weakest outermost
  final public void Path() throws ParseException {Path p ;
    PathAlternative();
}

  final public void PathAlternative() throws ParseException {Path p1 , p2 ;
    PathSequence();
    label_26:
    while (true) {
      if (jj_2_161(3)) {
        ;
      } else {
        break label_26;
      }
      jj_consume_token(VBAR);
      PathSequence();
    }
}

  final public void PathSequence() throws ParseException {Path p1 , p2 ;
    PathEltOrInverse();
    label_27:
    while (true) {
      if (jj_2_162(3)) {
        ;
      } else {
        break label_27;
      }
      jj_consume_token(SLASH);
      PathEltOrInverse();
    }
}

// Path unit element, no inverse
  final public void PathElt() throws ParseException {String str ; Node n ; Path p = null ;
    PathPrimary();
    if (jj_2_163(3)) {
      PathMod(p);
    } else {
      ;
    }
}

// Path unit element, including inverse.
  final public void PathEltOrInverse() throws ParseException {String str ; Node n ; Path p ;
    if (jj_2_164(3)) {
      PathElt();
    } else if (jj_2_165(3)) {
      jj_consume_token(CARAT);
      PathElt();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PathMod(Path p) throws ParseException {long i1 ; long i2 ;
    if (jj_2_166(3)) {
      jj_consume_token(QMARK);
    } else if (jj_2_167(3)) {
      jj_consume_token(STAR);
    } else if (jj_2_168(3)) {
      jj_consume_token(PLUS);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PathPrimary() throws ParseException {String str ; Path p ; Node n ;
    if (jj_2_169(3)) {
      iri();
    } else if (jj_2_170(3)) {
      jj_consume_token(KW_A);
    } else if (jj_2_171(3)) {
      jj_consume_token(BANG);
      PathNegatedPropertySet();
    } else if (jj_2_172(3)) {
      jj_consume_token(LPAREN);
      Path();
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PathNegatedPropertySet() throws ParseException {P_Path0 p ; P_NegPropSet pNegSet ;
    if (jj_2_175(3)) {
      PathOneInPropertySet();
    } else if (jj_2_176(3)) {
      jj_consume_token(LPAREN);
      if (jj_2_174(3)) {
        PathOneInPropertySet();
        label_28:
        while (true) {
          if (jj_2_173(3)) {
            ;
          } else {
            break label_28;
          }
          jj_consume_token(VBAR);
          PathOneInPropertySet();
        }
      } else {
        ;
      }
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PathOneInPropertySet() throws ParseException {String str ; Node n ;
    if (jj_2_179(3)) {
      iri();
    } else if (jj_2_180(3)) {
      jj_consume_token(KW_A);
    } else if (jj_2_181(3)) {
      jj_consume_token(CARAT);
      if (jj_2_177(3)) {
        iri();
      } else if (jj_2_178(3)) {
        jj_consume_token(KW_A);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void Integer() throws ParseException {Token t ;
    t = jj_consume_token(INTEGER);
}

// -------- Triple expansions

// Anything that can stand in a node slot and which is
// a number of triples
  final public 
void TriplesNode(TripleCollectorMark acc) throws ParseException {Node n ;
    if (jj_2_182(3)) {
      Collection(acc);
    } else if (jj_2_183(3)) {
      BlankNodePropertyList(acc);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void BlankNodePropertyList(TripleCollector acc) throws ParseException {Token t ;
    t = jj_consume_token(LBRACKET);
    PropertyListNotEmpty(null, acc);
    jj_consume_token(RBRACKET);
}

  final public void TriplesNodePath(TripleCollectorMark acc) throws ParseException {Node n ;
    if (jj_2_184(3)) {
      CollectionPath(acc);
    } else if (jj_2_185(3)) {
      BlankNodePropertyListPath(acc);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void BlankNodePropertyListPath(TripleCollector acc) throws ParseException {Token t ;
    t = jj_consume_token(LBRACKET);
    PropertyListPathNotEmpty(null, acc);
    jj_consume_token(RBRACKET);
}

// << >> as reification. Allows any subject/predicate/object nodes.
// ------- RDF collections
  final public 
void Collection(TripleCollectorMark acc) throws ParseException {Node listHead ; Node lastCell = null ; int mark ; Node n ; Token t ;
    t = jj_consume_token(LPAREN);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    label_29:
    while (true) {
      GraphNode(acc);
      if (jj_2_186(3)) {
        ;
      } else {
        break label_29;
      }
    }
    jj_consume_token(RPAREN);
}

  final public void CollectionPath(TripleCollectorMark acc) throws ParseException {Node listHead ; Node lastCell = null ; int mark ; Node n ; Token t ;
    t = jj_consume_token(LPAREN);
int beginLine = t.beginLine; int beginColumn = t.beginColumn; t = null;
    label_30:
    while (true) {
      GraphNodePath(acc);
      if (jj_2_187(3)) {
        ;
      } else {
        break label_30;
      }
    }
    jj_consume_token(RPAREN);
}

// RDF-star Annotation Syntax
  final public void AnnotationPath(TripleCollector acc, Node s, Node p, Path path, Node o) throws ParseException {
    if (jj_2_188(3)) {
      jj_consume_token(L_ANN);
      PropertyListPathNotEmpty(null, acc);
      jj_consume_token(R_ANN);
    } else {
      ;
    }
}

// RDF-star Annotation Syntax
  final public void Annotation(TripleCollector acc, Node s, Node p, Path path, Node o) throws ParseException {
    if (jj_2_189(3)) {
      jj_consume_token(L_ANN);
      PropertyListNotEmpty(null, acc);
      jj_consume_token(R_ANN);
    } else {
      ;
    }
}

// -------- Nodes in a graph pattern or template
  final public 
void GraphNode(TripleCollectorMark acc) throws ParseException {Node n ;
    if (jj_2_190(3)) {
      VarOrTerm();
    } else if (jj_2_191(3)) {
      TriplesNode(acc);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void GraphNodePath(TripleCollectorMark acc) throws ParseException {Node n ;
    if (jj_2_192(3)) {
      VarOrTerm();
    } else if (jj_2_193(3)) {
      TriplesNodePath(acc);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void VarOrTerm() throws ParseException {Node n = null ; String iri ;
    if (jj_2_194(3)) {
      Var();
    } else if (jj_2_195(3)) {
      iri();
    } else if (jj_2_196(3)) {
      RDFLiteral();
    } else if (jj_2_197(3)) {
      NumericLiteral();
    } else if (jj_2_198(3)) {
      BooleanLiteral();
    } else if (jj_2_199(3)) {
      BlankNode();
    } else if (jj_2_200(3)) {
      jj_consume_token(NIL);
    } else if (jj_2_201(3)) {
      QuotedTriple();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void QuotedTriple() throws ParseException {Node n = null ; Token t ; Node s , p , o ;
    t = jj_consume_token(LT2);
    VarOrTerm();
    Verb();
    VarOrTerm();
    jj_consume_token(GT2);
}

  final public void QuotedTripleData() throws ParseException {Node n = null ; Token t ; String iri ; Node s , p , o ;
    t = jj_consume_token(LT2);
    DataValueTerm();
    if (jj_2_202(3)) {
      iri();
    } else if (jj_2_203(3)) {
      jj_consume_token(KW_A);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    DataValueTerm();
    jj_consume_token(GT2);
}

  final public void DataValueTerm() throws ParseException {Node n = null ; String iri ; Node s , p , o ;
    if (jj_2_204(3)) {
      iri();
    } else if (jj_2_205(3)) {
      RDFLiteral();
    } else if (jj_2_206(3)) {
      NumericLiteral();
    } else if (jj_2_207(3)) {
      BooleanLiteral();
    } else if (jj_2_208(3)) {
      QuotedTripleData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

// e.g. Property (if no bNodes) + DESCRIBE
  final public void VarOrIri() throws ParseException {Node n = null ; String iri ;
    if (jj_2_209(3)) {
      Var();
    } else if (jj_2_210(3)) {
      iri();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

// e.g. INSERT DATA { GRAPH ... }
  final public 
void Var() throws ParseException {Token t ;
    if (jj_2_211(3)) {
      t = jj_consume_token(VAR1);
    } else if (jj_2_212(3)) {
      t = jj_consume_token(VAR2);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

// -------- Constraint syntax
  final public 
void Expression() throws ParseException {Expr expr ;
    ConditionalOrExpression();
}

  final public void ConditionalOrExpression() throws ParseException {Expr expr1, expr2 ;
    ConditionalAndExpression();
    label_31:
    while (true) {
      if (jj_2_213(3)) {
        ;
      } else {
        break label_31;
      }
      jj_consume_token(SC_OR);
      ConditionalAndExpression();
    }
}

  final public void ConditionalAndExpression() throws ParseException {Expr expr1, expr2 ;
    ValueLogical();
    label_32:
    while (true) {
      if (jj_2_214(3)) {
        ;
      } else {
        break label_32;
      }
      jj_consume_token(SC_AND);
      ValueLogical();
    }
}

  final public void ValueLogical() throws ParseException {Expr expr ;
    RelationalExpression();
}

  final public void RelationalExpression() throws ParseException {Expr expr1, expr2 ; ExprList a ;
    NumericExpression();
    if (jj_2_223(3)) {
      if (jj_2_215(3)) {
        jj_consume_token(EQ);
        NumericExpression();
      } else if (jj_2_216(3)) {
        jj_consume_token(NE);
        NumericExpression();
      } else if (jj_2_217(3)) {
        jj_consume_token(LT);
        NumericExpression();
      } else if (jj_2_218(3)) {
        jj_consume_token(GT);
        NumericExpression();
      } else if (jj_2_219(3)) {
        jj_consume_token(LE);
        NumericExpression();
      } else if (jj_2_220(3)) {
        jj_consume_token(GE);
        NumericExpression();
      } else if (jj_2_221(3)) {
        jj_consume_token(IN);
        ExpressionList();
      } else if (jj_2_222(3)) {
        jj_consume_token(NOT);
        jj_consume_token(IN);
        ExpressionList();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      ;
    }
}

  final public void NumericExpression() throws ParseException {Expr expr ;
    AdditiveExpression();
}

  final public void AdditiveExpression() throws ParseException {Expr expr1, expr2, expr3 ; boolean addition ; Node n ;
    MultiplicativeExpression();
    label_33:
    while (true) {
      if (jj_2_224(3)) {
        ;
      } else {
        break label_33;
      }
      if (jj_2_230(3)) {
        jj_consume_token(PLUS);
        MultiplicativeExpression();
      } else if (jj_2_231(3)) {
        jj_consume_token(MINUS);
        MultiplicativeExpression();
      } else if (jj_2_232(3)) {
        if (jj_2_225(3)) {
          NumericLiteralPositive();
        } else if (jj_2_226(3)) {
          NumericLiteralNegative();
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        label_34:
        while (true) {
          if (jj_2_227(3)) {
            ;
          } else {
            break label_34;
          }
          if (jj_2_228(3)) {
            jj_consume_token(STAR);
            UnaryExpression();
          } else if (jj_2_229(3)) {
            jj_consume_token(SLASH);
            UnaryExpression();
          } else {
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
}

  final public void MultiplicativeExpression() throws ParseException {Expr expr1, expr2 ;
    UnaryExpression();
    label_35:
    while (true) {
      if (jj_2_233(3)) {
        ;
      } else {
        break label_35;
      }
      if (jj_2_234(3)) {
        jj_consume_token(STAR);
        UnaryExpression();
      } else if (jj_2_235(3)) {
        jj_consume_token(SLASH);
        UnaryExpression();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
}

  final public void UnaryExpression() throws ParseException {Expr expr ;
    if (jj_2_236(3)) {
      jj_consume_token(BANG);
      PrimaryExpression();
    } else if (jj_2_237(3)) {
      jj_consume_token(PLUS);
      PrimaryExpression();
    } else if (jj_2_238(3)) {
      jj_consume_token(MINUS);
      PrimaryExpression();
    } else if (jj_2_239(3)) {
      PrimaryExpression();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PrimaryExpression() throws ParseException {Expr expr ; Node n = null ;
    if (jj_2_240(3)) {
      BrackettedExpression();
    } else if (jj_2_241(3)) {
      BuiltInCall();
    } else if (jj_2_242(3)) {
      iriOrFunction();
    } else if (jj_2_243(3)) {
      RDFLiteral();
    } else if (jj_2_244(3)) {
      NumericLiteral();
    } else if (jj_2_245(3)) {
      BooleanLiteral();
    } else if (jj_2_246(3)) {
      Var();
    } else if (jj_2_247(3)) {
      ExprQuotedTriple();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void ExprVarOrTerm() throws ParseException {Node n = null; String s;
    if (jj_2_248(3)) {
      iri();
    } else if (jj_2_249(3)) {
      RDFLiteral();
    } else if (jj_2_250(3)) {
      NumericLiteral();
    } else if (jj_2_251(3)) {
      BooleanLiteral();
    } else if (jj_2_252(3)) {
      Var();
    } else if (jj_2_253(3)) {
      ExprQuotedTriple();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void ExprQuotedTriple() throws ParseException {Token t ; Node s,p,o,n = null;
    t = jj_consume_token(LT2);
    ExprVarOrTerm();
    Verb();
    ExprVarOrTerm();
    jj_consume_token(GT2);
}

  final public void BrackettedExpression() throws ParseException {Expr expr ;
    jj_consume_token(LPAREN);
    Expression();
    jj_consume_token(RPAREN);
}

  final public void BuiltInCall() throws ParseException {Expr expr ;
                       Expr expr1 = null ; Expr expr2 = null ; Expr expr3 = null ;
                       Node gn ; ExprList a ;
    if (jj_2_256(3)) {
      Aggregate();
    } else if (jj_2_257(3)) {
      jj_consume_token(STR);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_258(3)) {
      jj_consume_token(LANG);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_259(3)) {
      jj_consume_token(LANGMATCHES);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_260(3)) {
      jj_consume_token(DTYPE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_261(3)) {
      jj_consume_token(BOUND);
      jj_consume_token(LPAREN);
      Var();
      jj_consume_token(RPAREN);
    } else if (jj_2_262(3)) {
      jj_consume_token(IRI);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_263(3)) {
      jj_consume_token(URI);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_264(3)) {
      jj_consume_token(BNODE);
      if (jj_2_254(3)) {
        jj_consume_token(LPAREN);
        Expression();
        jj_consume_token(RPAREN);
      } else if (jj_2_255(3)) {
        jj_consume_token(NIL);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else if (jj_2_265(3)) {
      jj_consume_token(RAND);
      jj_consume_token(NIL);
    } else if (jj_2_266(3)) {
      jj_consume_token(ABS);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_267(3)) {
      jj_consume_token(CEIL);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_268(3)) {
      jj_consume_token(FLOOR);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_269(3)) {
      jj_consume_token(ROUND);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_270(3)) {
      jj_consume_token(CONCAT);
      ExpressionList();
    } else if (jj_2_271(3)) {
      SubstringExpression();
    } else if (jj_2_272(3)) {
      jj_consume_token(STRLEN);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_273(3)) {
      StrReplaceExpression();
    } else if (jj_2_274(3)) {
      jj_consume_token(UCASE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_275(3)) {
      jj_consume_token(LCASE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_276(3)) {
      jj_consume_token(ENCODE_FOR_URI);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_277(3)) {
      jj_consume_token(CONTAINS);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_278(3)) {
      jj_consume_token(STRSTARTS);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_279(3)) {
      jj_consume_token(STRENDS);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_280(3)) {
      jj_consume_token(STRBEFORE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_281(3)) {
      jj_consume_token(STRAFTER);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_282(3)) {
      jj_consume_token(YEAR);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_283(3)) {
      jj_consume_token(MONTH);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_284(3)) {
      jj_consume_token(DAY);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_285(3)) {
      jj_consume_token(HOURS);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_286(3)) {
      jj_consume_token(MINUTES);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_287(3)) {
      jj_consume_token(SECONDS);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_288(3)) {
      jj_consume_token(TIMEZONE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_289(3)) {
      jj_consume_token(TZ);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_290(3)) {
      jj_consume_token(NOW);
      jj_consume_token(NIL);
    } else if (jj_2_291(3)) {
      jj_consume_token(UUID);
      jj_consume_token(NIL);
    } else if (jj_2_292(3)) {
      jj_consume_token(STRUUID);
      jj_consume_token(NIL);
    } else if (jj_2_293(3)) {
      jj_consume_token(MD5);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_294(3)) {
      jj_consume_token(SHA1);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_295(3)) {
      jj_consume_token(SHA256);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_296(3)) {
      jj_consume_token(SHA384);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_297(3)) {
      jj_consume_token(SHA512);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_298(3)) {
      jj_consume_token(COALESCE);
      ExpressionList();
    } else if (jj_2_299(3)) {
      jj_consume_token(IF);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_300(3)) {
      jj_consume_token(STRLANG);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_301(3)) {
      jj_consume_token(STRDT);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_302(3)) {
      jj_consume_token(SAME_TERM);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_303(3)) {
      jj_consume_token(IS_IRI);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_304(3)) {
      jj_consume_token(IS_URI);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_305(3)) {
      jj_consume_token(IS_BLANK);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_306(3)) {
      jj_consume_token(IS_LITERAL);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_307(3)) {
      jj_consume_token(IS_NUMERIC);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_308(3)) {
      RegexExpression();
    } else if (jj_2_309(3)) {
      ExistsFunc();
    } else if (jj_2_310(3)) {
      NotExistsFunc();
    } else if (jj_2_311(3)) {
      jj_consume_token(IS_TRIPLE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_312(3)) {
      jj_consume_token(TRIPLE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(COMMA);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_313(3)) {
      jj_consume_token(SUBJECT);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_314(3)) {
      jj_consume_token(PREDICATE);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_315(3)) {
      jj_consume_token(OBJECT);
      jj_consume_token(LPAREN);
      Expression();
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void RegexExpression() throws ParseException {Expr expr ; Expr patExpr = null ; Expr flagsExpr = null ;
    jj_consume_token(REGEX);
    jj_consume_token(LPAREN);
    Expression();
    jj_consume_token(COMMA);
    Expression();
    if (jj_2_316(3)) {
      jj_consume_token(COMMA);
      Expression();
    } else {
      ;
    }
    jj_consume_token(RPAREN);
}

  final public void SubstringExpression() throws ParseException {Expr expr1 ; Expr expr2 = null ; Expr expr3 = null ;
    jj_consume_token(SUBSTR);
    jj_consume_token(LPAREN);
    Expression();
    jj_consume_token(COMMA);
    Expression();
    if (jj_2_317(3)) {
      jj_consume_token(COMMA);
      Expression();
    } else {
      ;
    }
    jj_consume_token(RPAREN);
}

  final public void StrReplaceExpression() throws ParseException {Expr expr1 ; Expr expr2 = null ; Expr expr3 = null ; Expr expr4 = null ;
    jj_consume_token(REPLACE);
    jj_consume_token(LPAREN);
    Expression();
    jj_consume_token(COMMA);
    Expression();
    jj_consume_token(COMMA);
    Expression();
    if (jj_2_318(3)) {
      jj_consume_token(COMMA);
      Expression();
    } else {
      ;
    }
    jj_consume_token(RPAREN);
}

  final public void ExistsFunc() throws ParseException {Element el ;
    jj_consume_token(EXISTS);
    GroupGraphPattern();
}

  final public void NotExistsFunc() throws ParseException {Element el ;
    jj_consume_token(NOT);
    jj_consume_token(EXISTS);
    GroupGraphPattern();
}

  final public void Aggregate() throws ParseException {Aggregator agg = null ; String sep = null ;
                     Expr expr = null ;  Expr expr2 = null ;
                     boolean distinct = false ;
                     ExprList ordered = new ExprList() ;
                     Token t ;
    if (jj_2_329(3)) {
      t = jj_consume_token(COUNT);
      jj_consume_token(LPAREN);
      if (jj_2_319(3)) {
        jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      if (jj_2_320(3)) {
        jj_consume_token(STAR);
      } else if (jj_2_321(3)) {
        Expression();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(RPAREN);
    } else if (jj_2_330(3)) {
      t = jj_consume_token(SUM);
      jj_consume_token(LPAREN);
      if (jj_2_322(3)) {
        jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_331(3)) {
      t = jj_consume_token(MIN);
      jj_consume_token(LPAREN);
      if (jj_2_323(3)) {
        jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_332(3)) {
      t = jj_consume_token(MAX);
      jj_consume_token(LPAREN);
      if (jj_2_324(3)) {
        jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_333(3)) {
      t = jj_consume_token(AVG);
      jj_consume_token(LPAREN);
      if (jj_2_325(3)) {
        jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_334(3)) {
      t = jj_consume_token(SAMPLE);
      jj_consume_token(LPAREN);
      if (jj_2_326(3)) {
        jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      Expression();
      jj_consume_token(RPAREN);
    } else if (jj_2_335(3)) {
      t = jj_consume_token(GROUP_CONCAT);
      jj_consume_token(LPAREN);
      if (jj_2_327(3)) {
        t = jj_consume_token(DISTINCT);
distinct = true ;
      } else {
        ;
      }
      Expression();
      if (jj_2_328(3)) {
        jj_consume_token(SEMICOLON);
        jj_consume_token(SEPARATOR);
        jj_consume_token(EQ);
        String();
      } else {
        ;
      }
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

// See also FunctionCall.
// The case of "q:name()" or "q:agg()" or just "q:name"
// by expanding out FunctionCall()
  final public 
void iriOrFunction() throws ParseException {String iri ; Args a = null ;
    iri();
    if (jj_2_336(3)) {
      ArgList();
    } else {
      ;
    }
}

  final public void RDFLiteral() throws ParseException {Token t ; String lex = null ;
    String();
String lang = null ; String uri = null ;
    if (jj_2_339(3)) {
      if (jj_2_337(3)) {
        t = jj_consume_token(LANGTAG);
      } else if (jj_2_338(3)) {
        jj_consume_token(DATATYPE);
        iri();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      ;
    }
}

  final public void NumericLiteral() throws ParseException {Node n ;
    if (jj_2_340(3)) {
      NumericLiteralUnsigned();
    } else if (jj_2_341(3)) {
      NumericLiteralPositive();
    } else if (jj_2_342(3)) {
      NumericLiteralNegative();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void NumericLiteralUnsigned() throws ParseException {Token t ;
    if (jj_2_343(3)) {
      t = jj_consume_token(INTEGER);
    } else if (jj_2_344(3)) {
      t = jj_consume_token(DECIMAL);
    } else if (jj_2_345(3)) {
      t = jj_consume_token(DOUBLE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void NumericLiteralPositive() throws ParseException {Token t ;
    if (jj_2_346(3)) {
      t = jj_consume_token(INTEGER_POSITIVE);
    } else if (jj_2_347(3)) {
      t = jj_consume_token(DECIMAL_POSITIVE);
    } else if (jj_2_348(3)) {
      t = jj_consume_token(DOUBLE_POSITIVE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void NumericLiteralNegative() throws ParseException {Token t ;
    if (jj_2_349(3)) {
      t = jj_consume_token(INTEGER_NEGATIVE);
    } else if (jj_2_350(3)) {
      t = jj_consume_token(DECIMAL_NEGATIVE);
    } else if (jj_2_351(3)) {
      t = jj_consume_token(DOUBLE_NEGATIVE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void BooleanLiteral() throws ParseException {
    if (jj_2_352(3)) {
      jj_consume_token(TRUE);
    } else if (jj_2_353(3)) {
      jj_consume_token(FALSE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void String() throws ParseException {Token t ; String lex = null ;
    if (jj_2_354(3)) {
      t = jj_consume_token(STRING_LITERAL1);
    } else if (jj_2_355(3)) {
      t = jj_consume_token(STRING_LITERAL2);
    } else if (jj_2_356(3)) {
      t = jj_consume_token(STRING_LITERAL_LONG1);
    } else if (jj_2_357(3)) {
      t = jj_consume_token(STRING_LITERAL_LONG2);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void iri() throws ParseException {String iri ;
    if (jj_2_358(3)) {
      IRIREF();
    } else if (jj_2_359(3)) {
      PrefixedName();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void PrefixedName() throws ParseException {Token t ;
    if (jj_2_360(3)) {
      t = jj_consume_token(PNAME_LN);
    } else if (jj_2_361(3)) {
      t = jj_consume_token(PNAME_NS);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void BlankNode() throws ParseException {Token t = null ;
    if (jj_2_362(3)) {
      t = jj_consume_token(BLANK_NODE_LABEL);
    } else if (jj_2_363(3)) {
      //  <LBRACKET> <RBRACKET> 
        t = jj_consume_token(ANON);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  final public void IRIREF() throws ParseException {Token t ;
    t = jj_consume_token(IRIref);
}

  private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_1()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_2()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_3()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_4()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_5()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_6()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_7()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_8()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_9()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_10()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_11()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_12()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_13()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_14()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_15()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_16()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_17()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_18()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_19()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_20()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_21()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_22()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_23()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_24()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_25()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_26()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_27()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_28()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_29()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_30()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_2_31(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_31()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private boolean jj_2_32(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_32()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private boolean jj_2_33(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_33()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private boolean jj_2_34(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_34()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private boolean jj_2_35(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_35()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private boolean jj_2_36(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_36()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private boolean jj_2_37(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_37()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private boolean jj_2_38(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_38()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private boolean jj_2_39(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_39()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private boolean jj_2_40(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_40()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private boolean jj_2_41(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_41()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private boolean jj_2_42(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_42()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private boolean jj_2_43(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_43()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private boolean jj_2_44(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_44()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private boolean jj_2_45(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_45()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  private boolean jj_2_46(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_46()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  private boolean jj_2_47(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_47()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  private boolean jj_2_48(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_48()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  private boolean jj_2_49(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_49()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  private boolean jj_2_50(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_50()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  private boolean jj_2_51(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_51()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  private boolean jj_2_52(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_52()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  private boolean jj_2_53(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_53()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  private boolean jj_2_54(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_54()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  private boolean jj_2_55(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_55()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  private boolean jj_2_56(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_56()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  private boolean jj_2_57(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_57()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  private boolean jj_2_58(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_58()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  private boolean jj_2_59(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_59()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  private boolean jj_2_60(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_60()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  private boolean jj_2_61(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_61()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  private boolean jj_2_62(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_62()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  private boolean jj_2_63(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_63()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  private boolean jj_2_64(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_64()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  private boolean jj_2_65(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_65()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  private boolean jj_2_66(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_66()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(65, xla); }
  }

  private boolean jj_2_67(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_67()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(66, xla); }
  }

  private boolean jj_2_68(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_68()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(67, xla); }
  }

  private boolean jj_2_69(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_69()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(68, xla); }
  }

  private boolean jj_2_70(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_70()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(69, xla); }
  }

  private boolean jj_2_71(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_71()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(70, xla); }
  }

  private boolean jj_2_72(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_72()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(71, xla); }
  }

  private boolean jj_2_73(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_73()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(72, xla); }
  }

  private boolean jj_2_74(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_74()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(73, xla); }
  }

  private boolean jj_2_75(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_75()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(74, xla); }
  }

  private boolean jj_2_76(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_76()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(75, xla); }
  }

  private boolean jj_2_77(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_77()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(76, xla); }
  }

  private boolean jj_2_78(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_78()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(77, xla); }
  }

  private boolean jj_2_79(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_79()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(78, xla); }
  }

  private boolean jj_2_80(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_80()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(79, xla); }
  }

  private boolean jj_2_81(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_81()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(80, xla); }
  }

  private boolean jj_2_82(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_82()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(81, xla); }
  }

  private boolean jj_2_83(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_83()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(82, xla); }
  }

  private boolean jj_2_84(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_84()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(83, xla); }
  }

  private boolean jj_2_85(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_85()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(84, xla); }
  }

  private boolean jj_2_86(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_86()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(85, xla); }
  }

  private boolean jj_2_87(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_87()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(86, xla); }
  }

  private boolean jj_2_88(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_88()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(87, xla); }
  }

  private boolean jj_2_89(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_89()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(88, xla); }
  }

  private boolean jj_2_90(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_90()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(89, xla); }
  }

  private boolean jj_2_91(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_91()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(90, xla); }
  }

  private boolean jj_2_92(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_92()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(91, xla); }
  }

  private boolean jj_2_93(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_93()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(92, xla); }
  }

  private boolean jj_2_94(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_94()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(93, xla); }
  }

  private boolean jj_2_95(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_95()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(94, xla); }
  }

  private boolean jj_2_96(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_96()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(95, xla); }
  }

  private boolean jj_2_97(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_97()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(96, xla); }
  }

  private boolean jj_2_98(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_98()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(97, xla); }
  }

  private boolean jj_2_99(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_99()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(98, xla); }
  }

  private boolean jj_2_100(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_100()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(99, xla); }
  }

  private boolean jj_2_101(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_101()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(100, xla); }
  }

  private boolean jj_2_102(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_102()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(101, xla); }
  }

  private boolean jj_2_103(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_103()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(102, xla); }
  }

  private boolean jj_2_104(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_104()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(103, xla); }
  }

  private boolean jj_2_105(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_105()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(104, xla); }
  }

  private boolean jj_2_106(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_106()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(105, xla); }
  }

  private boolean jj_2_107(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_107()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(106, xla); }
  }

  private boolean jj_2_108(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_108()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(107, xla); }
  }

  private boolean jj_2_109(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_109()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(108, xla); }
  }

  private boolean jj_2_110(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_110()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(109, xla); }
  }

  private boolean jj_2_111(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_111()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(110, xla); }
  }

  private boolean jj_2_112(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_112()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(111, xla); }
  }

  private boolean jj_2_113(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_113()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(112, xla); }
  }

  private boolean jj_2_114(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_114()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(113, xla); }
  }

  private boolean jj_2_115(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_115()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(114, xla); }
  }

  private boolean jj_2_116(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_116()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(115, xla); }
  }

  private boolean jj_2_117(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_117()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(116, xla); }
  }

  private boolean jj_2_118(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_118()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(117, xla); }
  }

  private boolean jj_2_119(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_119()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(118, xla); }
  }

  private boolean jj_2_120(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_120()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(119, xla); }
  }

  private boolean jj_2_121(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_121()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(120, xla); }
  }

  private boolean jj_2_122(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_122()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(121, xla); }
  }

  private boolean jj_2_123(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_123()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(122, xla); }
  }

  private boolean jj_2_124(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_124()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(123, xla); }
  }

  private boolean jj_2_125(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_125()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(124, xla); }
  }

  private boolean jj_2_126(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_126()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(125, xla); }
  }

  private boolean jj_2_127(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_127()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(126, xla); }
  }

  private boolean jj_2_128(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_128()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(127, xla); }
  }

  private boolean jj_2_129(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_129()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(128, xla); }
  }

  private boolean jj_2_130(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_130()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(129, xla); }
  }

  private boolean jj_2_131(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_131()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(130, xla); }
  }

  private boolean jj_2_132(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_132()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(131, xla); }
  }

  private boolean jj_2_133(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_133()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(132, xla); }
  }

  private boolean jj_2_134(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_134()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(133, xla); }
  }

  private boolean jj_2_135(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_135()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(134, xla); }
  }

  private boolean jj_2_136(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_136()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(135, xla); }
  }

  private boolean jj_2_137(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_137()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(136, xla); }
  }

  private boolean jj_2_138(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_138()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(137, xla); }
  }

  private boolean jj_2_139(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_139()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(138, xla); }
  }

  private boolean jj_2_140(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_140()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(139, xla); }
  }

  private boolean jj_2_141(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_141()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(140, xla); }
  }

  private boolean jj_2_142(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_142()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(141, xla); }
  }

  private boolean jj_2_143(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_143()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(142, xla); }
  }

  private boolean jj_2_144(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_144()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(143, xla); }
  }

  private boolean jj_2_145(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_145()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(144, xla); }
  }

  private boolean jj_2_146(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_146()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(145, xla); }
  }

  private boolean jj_2_147(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_147()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(146, xla); }
  }

  private boolean jj_2_148(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_148()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(147, xla); }
  }

  private boolean jj_2_149(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_149()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(148, xla); }
  }

  private boolean jj_2_150(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_150()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(149, xla); }
  }

  private boolean jj_2_151(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_151()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(150, xla); }
  }

  private boolean jj_2_152(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_152()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(151, xla); }
  }

  private boolean jj_2_153(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_153()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(152, xla); }
  }

  private boolean jj_2_154(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_154()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(153, xla); }
  }

  private boolean jj_2_155(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_155()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(154, xla); }
  }

  private boolean jj_2_156(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_156()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(155, xla); }
  }

  private boolean jj_2_157(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_157()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(156, xla); }
  }

  private boolean jj_2_158(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_158()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(157, xla); }
  }

  private boolean jj_2_159(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_159()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(158, xla); }
  }

  private boolean jj_2_160(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_160()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(159, xla); }
  }

  private boolean jj_2_161(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_161()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(160, xla); }
  }

  private boolean jj_2_162(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_162()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(161, xla); }
  }

  private boolean jj_2_163(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_163()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(162, xla); }
  }

  private boolean jj_2_164(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_164()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(163, xla); }
  }

  private boolean jj_2_165(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_165()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(164, xla); }
  }

  private boolean jj_2_166(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_166()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(165, xla); }
  }

  private boolean jj_2_167(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_167()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(166, xla); }
  }

  private boolean jj_2_168(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_168()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(167, xla); }
  }

  private boolean jj_2_169(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_169()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(168, xla); }
  }

  private boolean jj_2_170(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_170()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(169, xla); }
  }

  private boolean jj_2_171(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_171()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(170, xla); }
  }

  private boolean jj_2_172(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_172()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(171, xla); }
  }

  private boolean jj_2_173(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_173()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(172, xla); }
  }

  private boolean jj_2_174(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_174()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(173, xla); }
  }

  private boolean jj_2_175(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_175()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(174, xla); }
  }

  private boolean jj_2_176(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_176()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(175, xla); }
  }

  private boolean jj_2_177(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_177()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(176, xla); }
  }

  private boolean jj_2_178(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_178()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(177, xla); }
  }

  private boolean jj_2_179(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_179()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(178, xla); }
  }

  private boolean jj_2_180(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_180()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(179, xla); }
  }

  private boolean jj_2_181(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_181()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(180, xla); }
  }

  private boolean jj_2_182(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_182()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(181, xla); }
  }

  private boolean jj_2_183(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_183()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(182, xla); }
  }

  private boolean jj_2_184(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_184()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(183, xla); }
  }

  private boolean jj_2_185(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_185()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(184, xla); }
  }

  private boolean jj_2_186(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_186()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(185, xla); }
  }

  private boolean jj_2_187(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_187()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(186, xla); }
  }

  private boolean jj_2_188(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_188()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(187, xla); }
  }

  private boolean jj_2_189(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_189()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(188, xla); }
  }

  private boolean jj_2_190(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_190()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(189, xla); }
  }

  private boolean jj_2_191(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_191()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(190, xla); }
  }

  private boolean jj_2_192(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_192()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(191, xla); }
  }

  private boolean jj_2_193(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_193()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(192, xla); }
  }

  private boolean jj_2_194(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_194()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(193, xla); }
  }

  private boolean jj_2_195(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_195()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(194, xla); }
  }

  private boolean jj_2_196(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_196()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(195, xla); }
  }

  private boolean jj_2_197(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_197()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(196, xla); }
  }

  private boolean jj_2_198(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_198()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(197, xla); }
  }

  private boolean jj_2_199(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_199()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(198, xla); }
  }

  private boolean jj_2_200(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_200()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(199, xla); }
  }

  private boolean jj_2_201(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_201()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(200, xla); }
  }

  private boolean jj_2_202(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_202()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(201, xla); }
  }

  private boolean jj_2_203(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_203()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(202, xla); }
  }

  private boolean jj_2_204(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_204()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(203, xla); }
  }

  private boolean jj_2_205(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_205()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(204, xla); }
  }

  private boolean jj_2_206(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_206()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(205, xla); }
  }

  private boolean jj_2_207(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_207()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(206, xla); }
  }

  private boolean jj_2_208(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_208()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(207, xla); }
  }

  private boolean jj_2_209(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_209()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(208, xla); }
  }

  private boolean jj_2_210(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_210()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(209, xla); }
  }

  private boolean jj_2_211(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_211()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(210, xla); }
  }

  private boolean jj_2_212(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_212()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(211, xla); }
  }

  private boolean jj_2_213(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_213()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(212, xla); }
  }

  private boolean jj_2_214(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_214()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(213, xla); }
  }

  private boolean jj_2_215(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_215()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(214, xla); }
  }

  private boolean jj_2_216(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_216()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(215, xla); }
  }

  private boolean jj_2_217(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_217()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(216, xla); }
  }

  private boolean jj_2_218(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_218()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(217, xla); }
  }

  private boolean jj_2_219(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_219()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(218, xla); }
  }

  private boolean jj_2_220(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_220()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(219, xla); }
  }

  private boolean jj_2_221(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_221()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(220, xla); }
  }

  private boolean jj_2_222(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_222()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(221, xla); }
  }

  private boolean jj_2_223(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_223()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(222, xla); }
  }

  private boolean jj_2_224(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_224()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(223, xla); }
  }

  private boolean jj_2_225(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_225()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(224, xla); }
  }

  private boolean jj_2_226(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_226()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(225, xla); }
  }

  private boolean jj_2_227(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_227()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(226, xla); }
  }

  private boolean jj_2_228(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_228()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(227, xla); }
  }

  private boolean jj_2_229(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_229()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(228, xla); }
  }

  private boolean jj_2_230(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_230()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(229, xla); }
  }

  private boolean jj_2_231(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_231()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(230, xla); }
  }

  private boolean jj_2_232(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_232()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(231, xla); }
  }

  private boolean jj_2_233(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_233()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(232, xla); }
  }

  private boolean jj_2_234(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_234()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(233, xla); }
  }

  private boolean jj_2_235(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_235()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(234, xla); }
  }

  private boolean jj_2_236(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_236()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(235, xla); }
  }

  private boolean jj_2_237(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_237()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(236, xla); }
  }

  private boolean jj_2_238(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_238()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(237, xla); }
  }

  private boolean jj_2_239(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_239()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(238, xla); }
  }

  private boolean jj_2_240(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_240()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(239, xla); }
  }

  private boolean jj_2_241(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_241()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(240, xla); }
  }

  private boolean jj_2_242(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_242()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(241, xla); }
  }

  private boolean jj_2_243(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_243()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(242, xla); }
  }

  private boolean jj_2_244(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_244()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(243, xla); }
  }

  private boolean jj_2_245(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_245()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(244, xla); }
  }

  private boolean jj_2_246(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_246()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(245, xla); }
  }

  private boolean jj_2_247(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_247()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(246, xla); }
  }

  private boolean jj_2_248(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_248()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(247, xla); }
  }

  private boolean jj_2_249(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_249()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(248, xla); }
  }

  private boolean jj_2_250(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_250()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(249, xla); }
  }

  private boolean jj_2_251(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_251()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(250, xla); }
  }

  private boolean jj_2_252(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_252()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(251, xla); }
  }

  private boolean jj_2_253(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_253()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(252, xla); }
  }

  private boolean jj_2_254(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_254()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(253, xla); }
  }

  private boolean jj_2_255(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_255()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(254, xla); }
  }

  private boolean jj_2_256(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_256()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(255, xla); }
  }

  private boolean jj_2_257(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_257()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(256, xla); }
  }

  private boolean jj_2_258(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_258()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(257, xla); }
  }

  private boolean jj_2_259(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_259()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(258, xla); }
  }

  private boolean jj_2_260(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_260()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(259, xla); }
  }

  private boolean jj_2_261(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_261()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(260, xla); }
  }

  private boolean jj_2_262(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_262()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(261, xla); }
  }

  private boolean jj_2_263(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_263()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(262, xla); }
  }

  private boolean jj_2_264(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_264()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(263, xla); }
  }

  private boolean jj_2_265(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_265()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(264, xla); }
  }

  private boolean jj_2_266(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_266()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(265, xla); }
  }

  private boolean jj_2_267(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_267()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(266, xla); }
  }

  private boolean jj_2_268(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_268()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(267, xla); }
  }

  private boolean jj_2_269(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_269()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(268, xla); }
  }

  private boolean jj_2_270(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_270()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(269, xla); }
  }

  private boolean jj_2_271(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_271()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(270, xla); }
  }

  private boolean jj_2_272(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_272()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(271, xla); }
  }

  private boolean jj_2_273(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_273()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(272, xla); }
  }

  private boolean jj_2_274(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_274()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(273, xla); }
  }

  private boolean jj_2_275(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_275()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(274, xla); }
  }

  private boolean jj_2_276(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_276()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(275, xla); }
  }

  private boolean jj_2_277(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_277()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(276, xla); }
  }

  private boolean jj_2_278(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_278()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(277, xla); }
  }

  private boolean jj_2_279(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_279()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(278, xla); }
  }

  private boolean jj_2_280(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_280()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(279, xla); }
  }

  private boolean jj_2_281(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_281()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(280, xla); }
  }

  private boolean jj_2_282(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_282()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(281, xla); }
  }

  private boolean jj_2_283(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_283()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(282, xla); }
  }

  private boolean jj_2_284(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_284()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(283, xla); }
  }

  private boolean jj_2_285(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_285()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(284, xla); }
  }

  private boolean jj_2_286(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_286()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(285, xla); }
  }

  private boolean jj_2_287(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_287()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(286, xla); }
  }

  private boolean jj_2_288(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_288()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(287, xla); }
  }

  private boolean jj_2_289(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_289()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(288, xla); }
  }

  private boolean jj_2_290(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_290()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(289, xla); }
  }

  private boolean jj_2_291(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_291()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(290, xla); }
  }

  private boolean jj_2_292(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_292()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(291, xla); }
  }

  private boolean jj_2_293(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_293()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(292, xla); }
  }

  private boolean jj_2_294(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_294()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(293, xla); }
  }

  private boolean jj_2_295(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_295()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(294, xla); }
  }

  private boolean jj_2_296(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_296()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(295, xla); }
  }

  private boolean jj_2_297(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_297()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(296, xla); }
  }

  private boolean jj_2_298(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_298()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(297, xla); }
  }

  private boolean jj_2_299(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_299()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(298, xla); }
  }

  private boolean jj_2_300(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_300()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(299, xla); }
  }

  private boolean jj_2_301(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_301()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(300, xla); }
  }

  private boolean jj_2_302(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_302()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(301, xla); }
  }

  private boolean jj_2_303(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_303()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(302, xla); }
  }

  private boolean jj_2_304(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_304()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(303, xla); }
  }

  private boolean jj_2_305(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_305()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(304, xla); }
  }

  private boolean jj_2_306(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_306()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(305, xla); }
  }

  private boolean jj_2_307(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_307()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(306, xla); }
  }

  private boolean jj_2_308(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_308()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(307, xla); }
  }

  private boolean jj_2_309(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_309()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(308, xla); }
  }

  private boolean jj_2_310(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_310()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(309, xla); }
  }

  private boolean jj_2_311(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_311()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(310, xla); }
  }

  private boolean jj_2_312(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_312()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(311, xla); }
  }

  private boolean jj_2_313(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_313()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(312, xla); }
  }

  private boolean jj_2_314(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_314()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(313, xla); }
  }

  private boolean jj_2_315(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_315()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(314, xla); }
  }

  private boolean jj_2_316(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_316()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(315, xla); }
  }

  private boolean jj_2_317(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_317()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(316, xla); }
  }

  private boolean jj_2_318(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_318()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(317, xla); }
  }

  private boolean jj_2_319(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_319()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(318, xla); }
  }

  private boolean jj_2_320(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_320()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(319, xla); }
  }

  private boolean jj_2_321(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_321()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(320, xla); }
  }

  private boolean jj_2_322(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_322()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(321, xla); }
  }

  private boolean jj_2_323(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_323()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(322, xla); }
  }

  private boolean jj_2_324(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_324()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(323, xla); }
  }

  private boolean jj_2_325(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_325()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(324, xla); }
  }

  private boolean jj_2_326(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_326()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(325, xla); }
  }

  private boolean jj_2_327(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_327()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(326, xla); }
  }

  private boolean jj_2_328(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_328()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(327, xla); }
  }

  private boolean jj_2_329(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_329()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(328, xla); }
  }

  private boolean jj_2_330(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_330()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(329, xla); }
  }

  private boolean jj_2_331(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_331()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(330, xla); }
  }

  private boolean jj_2_332(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_332()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(331, xla); }
  }

  private boolean jj_2_333(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_333()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(332, xla); }
  }

  private boolean jj_2_334(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_334()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(333, xla); }
  }

  private boolean jj_2_335(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_335()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(334, xla); }
  }

  private boolean jj_2_336(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_336()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(335, xla); }
  }

  private boolean jj_2_337(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_337()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(336, xla); }
  }

  private boolean jj_2_338(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_338()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(337, xla); }
  }

  private boolean jj_2_339(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_339()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(338, xla); }
  }

  private boolean jj_2_340(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_340()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(339, xla); }
  }

  private boolean jj_2_341(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_341()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(340, xla); }
  }

  private boolean jj_2_342(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_342()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(341, xla); }
  }

  private boolean jj_2_343(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_343()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(342, xla); }
  }

  private boolean jj_2_344(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_344()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(343, xla); }
  }

  private boolean jj_2_345(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_345()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(344, xla); }
  }

  private boolean jj_2_346(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_346()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(345, xla); }
  }

  private boolean jj_2_347(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_347()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(346, xla); }
  }

  private boolean jj_2_348(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_348()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(347, xla); }
  }

  private boolean jj_2_349(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_349()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(348, xla); }
  }

  private boolean jj_2_350(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_350()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(349, xla); }
  }

  private boolean jj_2_351(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_351()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(350, xla); }
  }

  private boolean jj_2_352(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_352()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(351, xla); }
  }

  private boolean jj_2_353(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_353()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(352, xla); }
  }

  private boolean jj_2_354(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_354()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(353, xla); }
  }

  private boolean jj_2_355(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_355()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(354, xla); }
  }

  private boolean jj_2_356(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_356()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(355, xla); }
  }

  private boolean jj_2_357(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_357()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(356, xla); }
  }

  private boolean jj_2_358(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_358()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(357, xla); }
  }

  private boolean jj_2_359(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_359()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(358, xla); }
  }

  private boolean jj_2_360(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_360()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(359, xla); }
  }

  private boolean jj_2_361(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_361()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(360, xla); }
  }

  private boolean jj_2_362(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_362()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(361, xla); }
  }

  private boolean jj_2_363(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_363()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(362, xla); }
  }

  private boolean jj_3_289()
 {
    if (jj_scan_token(TZ)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_126()
 {
    if (jj_3R_BooleanLiteral_1766_3_101()) return true;
    return false;
  }

  private boolean jj_3_288()
 {
    if (jj_scan_token(TIMEZONE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_125()
 {
    if (jj_3R_NumericLiteral_1729_3_100()) return true;
    return false;
  }

  private boolean jj_3_124()
 {
    if (jj_3R_RDFLiteral_1713_3_99()) return true;
    return false;
  }

  private boolean jj_3R_DataBlockValue_760_3_98()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_123()) {
    jj_scanpos = xsp;
    if (jj_3_124()) {
    jj_scanpos = xsp;
    if (jj_3_125()) {
    jj_scanpos = xsp;
    if (jj_3_126()) {
    jj_scanpos = xsp;
    if (jj_3_127()) {
    jj_scanpos = xsp;
    if (jj_3_128()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_123()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_287()
 {
    if (jj_scan_token(SECONDS)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_286()
 {
    if (jj_scan_token(MINUTES)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_285()
 {
    if (jj_scan_token(HOURS)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_284()
 {
    if (jj_scan_token(DAY)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_122()
 {
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_283()
 {
    if (jj_scan_token(MONTH)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_282()
 {
    if (jj_scan_token(YEAR)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_281()
 {
    if (jj_scan_token(STRAFTER)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_120()
 {
    if (jj_3R_DataBlockValue_760_3_98()) return true;
    return false;
  }

  private boolean jj_3_280()
 {
    if (jj_scan_token(STRBEFORE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_121()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_120()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_119()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_121()) {
    jj_scanpos = xsp;
    if (jj_3_122()) return true;
    }
    return false;
  }

  private boolean jj_3_279()
 {
    if (jj_scan_token(STRENDS)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_116()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_278()
 {
    if (jj_scan_token(STRSTARTS)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_114()
 {
    if (jj_3R_InlineDataFull_731_3_97()) return true;
    return false;
  }

  private boolean jj_3_118()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_116()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_117()
 {
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_277()
 {
    if (jj_scan_token(CONTAINS)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_276()
 {
    if (jj_scan_token(ENCODE_FOR_URI)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_InlineDataFull_731_3_97()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_117()) {
    jj_scanpos = xsp;
    if (jj_3_118()) return true;
    }
    if (jj_scan_token(LBRACE)) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_119()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3_275()
 {
    if (jj_scan_token(LCASE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_274()
 {
    if (jj_scan_token(UCASE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_273()
 {
    if (jj_3R_StrReplaceExpression_1627_3_145()) return true;
    return false;
  }

  private boolean jj_3_115()
 {
    if (jj_3R_DataBlockValue_760_3_98()) return true;
    return false;
  }

  private boolean jj_3_272()
 {
    if (jj_scan_token(STRLEN)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_271()
 {
    if (jj_3R_SubstringExpression_1614_5_144()) return true;
    return false;
  }

  private boolean jj_3_270()
 {
    if (jj_scan_token(CONCAT)) return true;
    if (jj_3R_ExpressionList_854_3_135()) return true;
    return false;
  }

  private boolean jj_3R_InlineDataOneVar_718_3_96()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    if (jj_scan_token(LBRACE)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_115()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3_269()
 {
    if (jj_scan_token(ROUND)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_268()
 {
    if (jj_scan_token(FLOOR)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_113()
 {
    if (jj_3R_InlineDataOneVar_718_3_96()) return true;
    return false;
  }

  private boolean jj_3_267()
 {
    if (jj_scan_token(CEIL)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_DataBlock_713_3_65()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_113()) {
    jj_scanpos = xsp;
    if (jj_3_114()) return true;
    }
    return false;
  }

  private boolean jj_3_266()
 {
    if (jj_scan_token(ABS)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_265()
 {
    if (jj_scan_token(RAND)) return true;
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_255()
 {
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_254()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3R_InlineData_704_3_95()
 {
    if (jj_scan_token(VALUES)) return true;
    if (jj_3R_DataBlock_713_3_65()) return true;
    return false;
  }

  private boolean jj_3_264()
 {
    if (jj_scan_token(BNODE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_254()) {
    jj_scanpos = xsp;
    if (jj_3_255()) return true;
    }
    return false;
  }

  private boolean jj_3_263()
 {
    if (jj_scan_token(URI)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_262()
 {
    if (jj_scan_token(IRI)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_Bind_692_3_94()
 {
    if (jj_scan_token(BIND)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_261()
 {
    if (jj_scan_token(BOUND)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_260()
 {
    if (jj_scan_token(DTYPE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_259()
 {
    if (jj_scan_token(LANGMATCHES)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_112()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3_258()
 {
    if (jj_scan_token(LANG)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_ServiceGraphPattern_680_3_92()
 {
    if (jj_scan_token(SERVICE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_112()) jj_scanpos = xsp;
    if (jj_3R_VarOrIri_1265_3_49()) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3_257()
 {
    if (jj_scan_token(STR)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_BuiltInCall_1443_5_57()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_256()) {
    jj_scanpos = xsp;
    if (jj_3_257()) {
    jj_scanpos = xsp;
    if (jj_3_258()) {
    jj_scanpos = xsp;
    if (jj_3_259()) {
    jj_scanpos = xsp;
    if (jj_3_260()) {
    jj_scanpos = xsp;
    if (jj_3_261()) {
    jj_scanpos = xsp;
    if (jj_3_262()) {
    jj_scanpos = xsp;
    if (jj_3_263()) {
    jj_scanpos = xsp;
    if (jj_3_264()) {
    jj_scanpos = xsp;
    if (jj_3_265()) {
    jj_scanpos = xsp;
    if (jj_3_266()) {
    jj_scanpos = xsp;
    if (jj_3_267()) {
    jj_scanpos = xsp;
    if (jj_3_268()) {
    jj_scanpos = xsp;
    if (jj_3_269()) {
    jj_scanpos = xsp;
    if (jj_3_270()) {
    jj_scanpos = xsp;
    if (jj_3_271()) {
    jj_scanpos = xsp;
    if (jj_3_272()) {
    jj_scanpos = xsp;
    if (jj_3_273()) {
    jj_scanpos = xsp;
    if (jj_3_274()) {
    jj_scanpos = xsp;
    if (jj_3_275()) {
    jj_scanpos = xsp;
    if (jj_3_276()) {
    jj_scanpos = xsp;
    if (jj_3_277()) {
    jj_scanpos = xsp;
    if (jj_3_278()) {
    jj_scanpos = xsp;
    if (jj_3_279()) {
    jj_scanpos = xsp;
    if (jj_3_280()) {
    jj_scanpos = xsp;
    if (jj_3_281()) {
    jj_scanpos = xsp;
    if (jj_3_282()) {
    jj_scanpos = xsp;
    if (jj_3_283()) {
    jj_scanpos = xsp;
    if (jj_3_284()) {
    jj_scanpos = xsp;
    if (jj_3_285()) {
    jj_scanpos = xsp;
    if (jj_3_286()) {
    jj_scanpos = xsp;
    if (jj_3_287()) {
    jj_scanpos = xsp;
    if (jj_3_288()) {
    jj_scanpos = xsp;
    if (jj_3_289()) {
    jj_scanpos = xsp;
    if (jj_3_290()) {
    jj_scanpos = xsp;
    if (jj_3_291()) {
    jj_scanpos = xsp;
    if (jj_3_292()) {
    jj_scanpos = xsp;
    if (jj_3_293()) {
    jj_scanpos = xsp;
    if (jj_3_294()) {
    jj_scanpos = xsp;
    if (jj_3_295()) {
    jj_scanpos = xsp;
    if (jj_3_296()) {
    jj_scanpos = xsp;
    if (jj_3_297()) {
    jj_scanpos = xsp;
    if (jj_3_298()) {
    jj_scanpos = xsp;
    if (jj_3_299()) {
    jj_scanpos = xsp;
    if (jj_3_300()) {
    jj_scanpos = xsp;
    if (jj_3_301()) {
    jj_scanpos = xsp;
    if (jj_3_302()) {
    jj_scanpos = xsp;
    if (jj_3_303()) {
    jj_scanpos = xsp;
    if (jj_3_304()) {
    jj_scanpos = xsp;
    if (jj_3_305()) {
    jj_scanpos = xsp;
    if (jj_3_306()) {
    jj_scanpos = xsp;
    if (jj_3_307()) {
    jj_scanpos = xsp;
    if (jj_3_308()) {
    jj_scanpos = xsp;
    if (jj_3_309()) {
    jj_scanpos = xsp;
    if (jj_3_310()) {
    jj_scanpos = xsp;
    if (jj_3_311()) {
    jj_scanpos = xsp;
    if (jj_3_312()) {
    jj_scanpos = xsp;
    if (jj_3_313()) {
    jj_scanpos = xsp;
    if (jj_3_314()) {
    jj_scanpos = xsp;
    if (jj_3_315()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_256()
 {
    if (jj_3R_Aggregate_1661_3_143()) return true;
    return false;
  }

  private boolean jj_3R_GraphGraphPattern_673_3_91()
 {
    if (jj_scan_token(GRAPH)) return true;
    if (jj_3R_VarOrIri_1265_3_49()) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3R_BrackettedExpression_1436_5_62()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3R_OptionalGraphPattern_665_3_89()
 {
    if (jj_scan_token(OPTIONAL)) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3R_ExprQuotedTriple_1426_3_142()
 {
    if (jj_scan_token(LT2)) return true;
    if (jj_3R_ExprVarOrTerm_1416_3_173()) return true;
    if (jj_3R_Verb_922_3_108()) return true;
    return false;
  }

  private boolean jj_3_111()
 {
    if (jj_3R_InlineData_704_3_95()) return true;
    return false;
  }

  private boolean jj_3_110()
 {
    if (jj_3R_Bind_692_3_94()) return true;
    return false;
  }

  private boolean jj_3_253()
 {
    if (jj_3R_ExprQuotedTriple_1426_3_142()) return true;
    return false;
  }

  private boolean jj_3_252()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_109()
 {
    if (jj_3R_Filter_812_3_93()) return true;
    return false;
  }

  private boolean jj_3_251()
 {
    if (jj_3R_BooleanLiteral_1766_3_101()) return true;
    return false;
  }

  private boolean jj_3_250()
 {
    if (jj_3R_NumericLiteral_1729_3_100()) return true;
    return false;
  }

  private boolean jj_3_108()
 {
    if (jj_3R_ServiceGraphPattern_680_3_92()) return true;
    return false;
  }

  private boolean jj_3_249()
 {
    if (jj_3R_RDFLiteral_1713_3_99()) return true;
    return false;
  }

  private boolean jj_3_248()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_107()
 {
    if (jj_3R_GraphGraphPattern_673_3_91()) return true;
    return false;
  }

  private boolean jj_3R_ExprVarOrTerm_1416_3_173()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_248()) {
    jj_scanpos = xsp;
    if (jj_3_249()) {
    jj_scanpos = xsp;
    if (jj_3_250()) {
    jj_scanpos = xsp;
    if (jj_3_251()) {
    jj_scanpos = xsp;
    if (jj_3_252()) {
    jj_scanpos = xsp;
    if (jj_3_253()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_106()
 {
    if (jj_3R_MinusGraphPattern_772_5_90()) return true;
    return false;
  }

  private boolean jj_3_105()
 {
    if (jj_3R_OptionalGraphPattern_665_3_89()) return true;
    return false;
  }

  private boolean jj_3_104()
 {
    if (jj_3R_GroupOrUnionGraphPattern_794_3_88()) return true;
    return false;
  }

  private boolean jj_3_247()
 {
    if (jj_3R_ExprQuotedTriple_1426_3_142()) return true;
    return false;
  }

  private boolean jj_3_246()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_102()
 {
    if (jj_3R_TriplesBlock_628_3_86()) return true;
    return false;
  }

  private boolean jj_3_245()
 {
    if (jj_3R_BooleanLiteral_1766_3_101()) return true;
    return false;
  }

  private boolean jj_3R_GraphPatternNotTriples_638_2_87()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_104()) {
    jj_scanpos = xsp;
    if (jj_3_105()) {
    jj_scanpos = xsp;
    if (jj_3_106()) {
    jj_scanpos = xsp;
    if (jj_3_107()) {
    jj_scanpos = xsp;
    if (jj_3_108()) {
    jj_scanpos = xsp;
    if (jj_3_109()) {
    jj_scanpos = xsp;
    if (jj_3_110()) {
    jj_scanpos = xsp;
    if (jj_3_111()) return true;
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_244()
 {
    if (jj_3R_NumericLiteral_1729_3_100()) return true;
    return false;
  }

  private boolean jj_3_243()
 {
    if (jj_3R_RDFLiteral_1713_3_99()) return true;
    return false;
  }

  private boolean jj_3_242()
 {
    if (jj_3R_iriOrFunction_1704_3_141()) return true;
    return false;
  }

  private boolean jj_3_103()
 {
    if (jj_scan_token(DOT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_102()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_241()
 {
    if (jj_3R_BuiltInCall_1443_5_57()) return true;
    return false;
  }

  private boolean jj_3_240()
 {
    if (jj_3R_BrackettedExpression_1436_5_62()) return true;
    return false;
  }

  private boolean jj_3R_PrimaryExpression_1395_3_140()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_240()) {
    jj_scanpos = xsp;
    if (jj_3_241()) {
    jj_scanpos = xsp;
    if (jj_3_242()) {
    jj_scanpos = xsp;
    if (jj_3_243()) {
    jj_scanpos = xsp;
    if (jj_3_244()) {
    jj_scanpos = xsp;
    if (jj_3_245()) {
    jj_scanpos = xsp;
    if (jj_3_246()) {
    jj_scanpos = xsp;
    if (jj_3_247()) return true;
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_TriplesBlock_628_3_86()
 {
    if (jj_3R_TriplesSameSubjectPath_945_3_163()) return true;
    return false;
  }

  private boolean jj_3_239()
 {
    if (jj_3R_PrimaryExpression_1395_3_140()) return true;
    return false;
  }

  private boolean jj_3_238()
 {
    if (jj_scan_token(MINUS)) return true;
    if (jj_3R_PrimaryExpression_1395_3_140()) return true;
    return false;
  }

  private boolean jj_3_237()
 {
    if (jj_scan_token(PLUS)) return true;
    if (jj_3R_PrimaryExpression_1395_3_140()) return true;
    return false;
  }

  private boolean jj_3_101()
 {
    if (jj_3R_TriplesBlock_628_3_86()) return true;
    return false;
  }

  private boolean jj_3R_UnaryExpression_1386_3_138()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_236()) {
    jj_scanpos = xsp;
    if (jj_3_237()) {
    jj_scanpos = xsp;
    if (jj_3_238()) {
    jj_scanpos = xsp;
    if (jj_3_239()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_236()
 {
    if (jj_scan_token(BANG)) return true;
    if (jj_3R_PrimaryExpression_1395_3_140()) return true;
    return false;
  }

  private boolean jj_3_100()
 {
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3_99()
 {
    if (jj_3R_GraphPatternNotTriples_638_2_87()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_100()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_101()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_235()
 {
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_UnaryExpression_1386_3_138()) return true;
    return false;
  }

  private boolean jj_3_233()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_234()) {
    jj_scanpos = xsp;
    if (jj_3_235()) return true;
    }
    return false;
  }

  private boolean jj_3_234()
 {
    if (jj_scan_token(STAR)) return true;
    if (jj_3R_UnaryExpression_1386_3_138()) return true;
    return false;
  }

  private boolean jj_3_98()
 {
    if (jj_3R_TriplesBlock_628_3_86()) return true;
    return false;
  }

  private boolean jj_3R_MultiplicativeExpression_1374_3_139()
 {
    if (jj_3R_UnaryExpression_1386_3_138()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_233()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_GroupGraphPatternSub_604_3_175()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_98()) jj_scanpos = xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_99()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_229()
 {
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_UnaryExpression_1386_3_138()) return true;
    return false;
  }

  private boolean jj_3_227()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_228()) {
    jj_scanpos = xsp;
    if (jj_3_229()) return true;
    }
    return false;
  }

  private boolean jj_3_228()
 {
    if (jj_scan_token(STAR)) return true;
    if (jj_3R_UnaryExpression_1386_3_138()) return true;
    return false;
  }

  private boolean jj_3R_GroupGraphPattern_592_5_166()
 {
    if (jj_3R_GroupGraphPatternSub_604_3_175()) return true;
    return false;
  }

  private boolean jj_3_226()
 {
    if (jj_3R_NumericLiteralNegative_1757_3_137()) return true;
    return false;
  }

  private boolean jj_3_225()
 {
    if (jj_3R_NumericLiteralPositive_1749_3_136()) return true;
    return false;
  }

  private boolean jj_3_97()
 {
    if (jj_3R_SubSelect_151_3_85()) return true;
    return false;
  }

  private boolean jj_3_232()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_225()) {
    jj_scanpos = xsp;
    if (jj_3_226()) return true;
    }
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_227()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_95()
 {
    if (jj_3R_TriplesTemplate_577_5_46()) return true;
    return false;
  }

  private boolean jj_3_231()
 {
    if (jj_scan_token(MINUS)) return true;
    if (jj_3R_MultiplicativeExpression_1374_3_139()) return true;
    return false;
  }

  private boolean jj_3R_GroupGraphPattern_585_3_103()
 {
    if (jj_scan_token(LBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_97()) {
    jj_scanpos = xsp;
    if (jj_3R_GroupGraphPattern_592_5_166()) return true;
    }
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3_224()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_230()) {
    jj_scanpos = xsp;
    if (jj_3_231()) {
    jj_scanpos = xsp;
    if (jj_3_232()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_230()
 {
    if (jj_scan_token(PLUS)) return true;
    if (jj_3R_MultiplicativeExpression_1374_3_139()) return true;
    return false;
  }

  private boolean jj_3R_AdditiveExpression_1348_3_172()
 {
    if (jj_3R_MultiplicativeExpression_1374_3_139()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_224()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_96()
 {
    if (jj_scan_token(DOT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_95()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_TriplesTemplate_577_5_46()
 {
    if (jj_3R_TriplesSameSubject_890_3_157()) return true;
    return false;
  }

  private boolean jj_3R_NumericExpression_1341_3_134()
 {
    if (jj_3R_AdditiveExpression_1348_3_172()) return true;
    return false;
  }

  private boolean jj_3_94()
 {
    if (jj_3R_TriplesTemplate_577_5_46()) return true;
    return false;
  }

  private boolean jj_3R_QuadsNotTriples_565_5_84()
 {
    if (jj_scan_token(GRAPH)) return true;
    if (jj_3R_VarOrIri_1265_3_49()) return true;
    if (jj_scan_token(LBRACE)) return true;
    return false;
  }

  private boolean jj_3_222()
 {
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(IN)) return true;
    if (jj_3R_ExpressionList_854_3_135()) return true;
    return false;
  }

  private boolean jj_3_221()
 {
    if (jj_scan_token(IN)) return true;
    if (jj_3R_ExpressionList_854_3_135()) return true;
    return false;
  }

  private boolean jj_3_93()
 {
    if (jj_3R_TriplesTemplate_577_5_46()) return true;
    return false;
  }

  private boolean jj_3_220()
 {
    if (jj_scan_token(GE)) return true;
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    return false;
  }

  private boolean jj_3_92()
 {
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3_219()
 {
    if (jj_scan_token(LE)) return true;
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    return false;
  }

  private boolean jj_3_91()
 {
    if (jj_3R_QuadsNotTriples_565_5_84()) return true;
    return false;
  }

  private boolean jj_3_218()
 {
    if (jj_scan_token(GT)) return true;
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    return false;
  }

  private boolean jj_3_90()
 {
    if (jj_3R_TriplesTemplate_577_5_46()) return true;
    return false;
  }

  private boolean jj_3_217()
 {
    if (jj_scan_token(LT)) return true;
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    return false;
  }

  private boolean jj_3R_Quads_555_4_174()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_90()) jj_scanpos = xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_91()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_216()
 {
    if (jj_scan_token(NE)) return true;
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    return false;
  }

  private boolean jj_3_215()
 {
    if (jj_scan_token(EQ)) return true;
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    return false;
  }

  private boolean jj_3_223()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_215()) {
    jj_scanpos = xsp;
    if (jj_3_216()) {
    jj_scanpos = xsp;
    if (jj_3_217()) {
    jj_scanpos = xsp;
    if (jj_3_218()) {
    jj_scanpos = xsp;
    if (jj_3_219()) {
    jj_scanpos = xsp;
    if (jj_3_220()) {
    jj_scanpos = xsp;
    if (jj_3_221()) {
    jj_scanpos = xsp;
    if (jj_3_222()) return true;
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_QuadData_548_5_162()
 {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_Quads_555_4_174()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3R_RelationalExpression_1316_3_171()
 {
    if (jj_3R_NumericExpression_1341_3_134()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_223()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_QuadPattern_540_5_161()
 {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_Quads_555_4_174()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3R_ValueLogical_1309_3_133()
 {
    if (jj_3R_RelationalExpression_1316_3_171()) return true;
    return false;
  }

  private boolean jj_3_89()
 {
    if (jj_scan_token(ALL)) return true;
    return false;
  }

  private boolean jj_3_88()
 {
    if (jj_scan_token(NAMED)) return true;
    return false;
  }

  private boolean jj_3_87()
 {
    if (jj_scan_token(DFT)) return true;
    return false;
  }

  private boolean jj_3_214()
 {
    if (jj_scan_token(SC_AND)) return true;
    if (jj_3R_ValueLogical_1309_3_133()) return true;
    return false;
  }

  private boolean jj_3_86()
 {
    if (jj_3R_GraphRef_524_5_79()) return true;
    return false;
  }

  private boolean jj_3R_ConditionalAndExpression_1299_3_132()
 {
    if (jj_3R_ValueLogical_1309_3_133()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_214()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_GraphRefAll_530_4_159()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_86()) {
    jj_scanpos = xsp;
    if (jj_3_87()) {
    jj_scanpos = xsp;
    if (jj_3_88()) {
    jj_scanpos = xsp;
    if (jj_3_89()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_GraphRef_524_5_79()
 {
    if (jj_scan_token(GRAPH)) return true;
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_213()
 {
    if (jj_scan_token(SC_OR)) return true;
    if (jj_3R_ConditionalAndExpression_1299_3_132()) return true;
    return false;
  }

  private boolean jj_3_212()
 {
    if (jj_scan_token(VAR2)) return true;
    return false;
  }

  private boolean jj_3R_ConditionalOrExpression_1288_3_156()
 {
    if (jj_3R_ConditionalAndExpression_1299_3_132()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_213()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_83()
 {
    if (jj_scan_token(GRAPH)) return true;
    return false;
  }

  private boolean jj_3_85()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_83()) jj_scanpos = xsp;
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_84()
 {
    if (jj_scan_token(DFT)) return true;
    return false;
  }

  private boolean jj_3R_GraphOrDefault_515_3_160()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_84()) {
    jj_scanpos = xsp;
    if (jj_3_85()) return true;
    }
    return false;
  }

  private boolean jj_3R_Expression_1281_3_45()
 {
    if (jj_3R_ConditionalOrExpression_1288_3_156()) return true;
    return false;
  }

  private boolean jj_3_82()
 {
    if (jj_scan_token(NAMED)) return true;
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_211()
 {
    if (jj_scan_token(VAR1)) return true;
    return false;
  }

  private boolean jj_3R_Var_1273_5_44()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_211()) {
    jj_scanpos = xsp;
    if (jj_3_212()) return true;
    }
    return false;
  }

  private boolean jj_3_81()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_210()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3R_UsingClause_505_3_83()
 {
    if (jj_scan_token(USING)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_81()) {
    jj_scanpos = xsp;
    if (jj_3_82()) return true;
    }
    return false;
  }

  private boolean jj_3_209()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3R_VarOrIri_1265_3_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_209()) {
    jj_scanpos = xsp;
    if (jj_3_210()) return true;
    }
    return false;
  }

  private boolean jj_3R_InsertClause_495_4_81()
 {
    if (jj_scan_token(INSERT)) return true;
    if (jj_3R_QuadPattern_540_5_161()) return true;
    return false;
  }

  private boolean jj_3_208()
 {
    if (jj_3R_QuotedTripleData_1245_3_102()) return true;
    return false;
  }

  private boolean jj_3_77()
 {
    if (jj_3R_InsertClause_495_4_81()) return true;
    return false;
  }

  private boolean jj_3_203()
 {
    if (jj_scan_token(KW_A)) return true;
    return false;
  }

  private boolean jj_3_207()
 {
    if (jj_3R_BooleanLiteral_1766_3_101()) return true;
    return false;
  }

  private boolean jj_3_206()
 {
    if (jj_3R_NumericLiteral_1729_3_100()) return true;
    return false;
  }

  private boolean jj_3_205()
 {
    if (jj_3R_RDFLiteral_1713_3_99()) return true;
    return false;
  }

  private boolean jj_3R_DataValueTerm_1255_3_165()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_204()) {
    jj_scanpos = xsp;
    if (jj_3_205()) {
    jj_scanpos = xsp;
    if (jj_3_206()) {
    jj_scanpos = xsp;
    if (jj_3_207()) {
    jj_scanpos = xsp;
    if (jj_3_208()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_204()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3R_DeleteClause_485_4_82()
 {
    if (jj_scan_token(DELETE)) return true;
    if (jj_3R_QuadPattern_540_5_161()) return true;
    return false;
  }

  private boolean jj_3_202()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3R_QuotedTripleData_1245_3_102()
 {
    if (jj_scan_token(LT2)) return true;
    if (jj_3R_DataValueTerm_1255_3_165()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_202()) {
    jj_scanpos = xsp;
    if (jj_3_203()) return true;
    }
    return false;
  }

  private boolean jj_3_80()
 {
    if (jj_3R_UsingClause_505_3_83()) return true;
    return false;
  }

  private boolean jj_3_79()
 {
    if (jj_3R_InsertClause_495_4_81()) return true;
    return false;
  }

  private boolean jj_3_78()
 {
    if (jj_3R_DeleteClause_485_4_82()) return true;
    return false;
  }

  private boolean jj_3_76()
 {
    if (jj_scan_token(WITH)) return true;
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3R_Modify_469_3_76()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_76()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_78()) {
    jj_scanpos = xsp;
    if (jj_3_79()) return true;
    }
    return false;
  }

  private boolean jj_3R_QuotedTriple_1235_3_131()
 {
    if (jj_scan_token(LT2)) return true;
    if (jj_3R_VarOrTerm_1220_3_105()) return true;
    if (jj_3R_Verb_922_3_108()) return true;
    return false;
  }

  private boolean jj_3_201()
 {
    if (jj_3R_QuotedTriple_1235_3_131()) return true;
    return false;
  }

  private boolean jj_3_200()
 {
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_199()
 {
    if (jj_3R_BlankNode_1804_3_130()) return true;
    return false;
  }

  private boolean jj_3R_DeleteWhere_459_3_75()
 {
    if (jj_scan_token(DELETE_WHERE)) return true;
    if (jj_3R_QuadPattern_540_5_161()) return true;
    return false;
  }

  private boolean jj_3_198()
 {
    if (jj_3R_BooleanLiteral_1766_3_101()) return true;
    return false;
  }

  private boolean jj_3_197()
 {
    if (jj_3R_NumericLiteral_1729_3_100()) return true;
    return false;
  }

  private boolean jj_3_196()
 {
    if (jj_3R_RDFLiteral_1713_3_99()) return true;
    return false;
  }

  private boolean jj_3_195()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_194()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3R_VarOrTerm_1220_3_105()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_194()) {
    jj_scanpos = xsp;
    if (jj_3_195()) {
    jj_scanpos = xsp;
    if (jj_3_196()) {
    jj_scanpos = xsp;
    if (jj_3_197()) {
    jj_scanpos = xsp;
    if (jj_3_198()) {
    jj_scanpos = xsp;
    if (jj_3_199()) {
    jj_scanpos = xsp;
    if (jj_3_200()) {
    jj_scanpos = xsp;
    if (jj_3_201()) return true;
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_DeleteData_452_3_78()
 {
    if (jj_scan_token(DELETE_DATA)) return true;
    if (jj_3R_QuadData_548_5_162()) return true;
    return false;
  }

  private boolean jj_3R_GraphNodePath_1213_3_129()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_192()) {
    jj_scanpos = xsp;
    if (jj_3_193()) return true;
    }
    return false;
  }

  private boolean jj_3_75()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3_192()
 {
    if (jj_3R_VarOrTerm_1220_3_105()) return true;
    return false;
  }

  private boolean jj_3_193()
 {
    if (jj_3R_TriplesNodePath_1139_1_112()) return true;
    return false;
  }

  private boolean jj_3R_InsertData_443_3_77()
 {
    if (jj_scan_token(INSERT_DATA)) return true;
    if (jj_3R_QuadData_548_5_162()) return true;
    return false;
  }

  private boolean jj_3_74()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3R_GraphNode_1206_3_128()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_190()) {
    jj_scanpos = xsp;
    if (jj_3_191()) return true;
    }
    return false;
  }

  private boolean jj_3_190()
 {
    if (jj_3R_VarOrTerm_1220_3_105()) return true;
    return false;
  }

  private boolean jj_3_191()
 {
    if (jj_3R_TriplesNode_1122_1_107()) return true;
    return false;
  }

  private boolean jj_3R_Copy_437_3_73()
 {
    if (jj_scan_token(COPY)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_75()) jj_scanpos = xsp;
    if (jj_3R_GraphOrDefault_515_3_160()) return true;
    if (jj_scan_token(TO)) return true;
    return false;
  }

  private boolean jj_3_73()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3R_Move_431_3_72()
 {
    if (jj_scan_token(MOVE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_74()) jj_scanpos = xsp;
    if (jj_3R_GraphOrDefault_515_3_160()) return true;
    if (jj_scan_token(TO)) return true;
    return false;
  }

  private boolean jj_3_189()
 {
    if (jj_scan_token(L_ANN)) return true;
    if (jj_3R_PropertyListNotEmpty_908_5_106()) return true;
    return false;
  }

  private boolean jj_3_72()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3R_Annotation_1195_3_167()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_189()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_Add_425_3_71()
 {
    if (jj_scan_token(ADD)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_73()) jj_scanpos = xsp;
    if (jj_3R_GraphOrDefault_515_3_160()) return true;
    if (jj_scan_token(TO)) return true;
    return false;
  }

  private boolean jj_3_71()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3R_Create_419_4_74()
 {
    if (jj_scan_token(CREATE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_72()) jj_scanpos = xsp;
    if (jj_3R_GraphRef_524_5_79()) return true;
    return false;
  }

  private boolean jj_3_188()
 {
    if (jj_scan_token(L_ANN)) return true;
    if (jj_3R_PropertyListPathNotEmpty_963_3_111()) return true;
    return false;
  }

  private boolean jj_3R_AnnotationPath_1184_3_168()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_188()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_70()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3R_Drop_413_4_70()
 {
    if (jj_scan_token(DROP)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_71()) jj_scanpos = xsp;
    if (jj_3R_GraphRefAll_530_4_159()) return true;
    return false;
  }

  private boolean jj_3_68()
 {
    if (jj_scan_token(SILENT)) return true;
    return false;
  }

  private boolean jj_3R_Clear_407_4_69()
 {
    if (jj_scan_token(CLEAR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_70()) jj_scanpos = xsp;
    if (jj_3R_GraphRefAll_530_4_159()) return true;
    return false;
  }

  private boolean jj_3_187()
 {
    if (jj_3R_GraphNodePath_1213_3_129()) return true;
    return false;
  }

  private boolean jj_3R_CollectionPath_1172_3_126()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    if (jj_3_187()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_187()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_69()
 {
    if (jj_scan_token(INTO)) return true;
    if (jj_3R_GraphRef_524_5_79()) return true;
    return false;
  }

  private boolean jj_3R_Load_400_5_68()
 {
    if (jj_scan_token(LOAD)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_68()) jj_scanpos = xsp;
    if (jj_3R_iri_1783_3_80()) return true;
    xsp = jj_scanpos;
    if (jj_3_69()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_67()
 {
    if (jj_3R_DeleteData_452_3_78()) return true;
    return false;
  }

  private boolean jj_3_66()
 {
    if (jj_3R_InsertData_443_3_77()) return true;
    return false;
  }

  private boolean jj_3_186()
 {
    if (jj_3R_GraphNode_1206_3_128()) return true;
    return false;
  }

  private boolean jj_3R_Collection_1160_3_124()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    if (jj_3_186()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_186()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_65()
 {
    if (jj_3R_Modify_469_3_76()) return true;
    return false;
  }

  private boolean jj_3_64()
 {
    if (jj_3R_DeleteWhere_459_3_75()) return true;
    return false;
  }

  private boolean jj_3_55()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    if (jj_3R_Update_376_4_66()) return true;
    return false;
  }

  private boolean jj_3_63()
 {
    if (jj_3R_Create_419_4_74()) return true;
    return false;
  }

  private boolean jj_3_62()
 {
    if (jj_3R_Copy_437_3_73()) return true;
    return false;
  }

  private boolean jj_3_61()
 {
    if (jj_3R_Move_431_3_72()) return true;
    return false;
  }

  private boolean jj_3_60()
 {
    if (jj_3R_Add_425_3_71()) return true;
    return false;
  }

  private boolean jj_3_59()
 {
    if (jj_3R_Drop_413_4_70()) return true;
    return false;
  }

  private boolean jj_3_58()
 {
    if (jj_3R_Clear_407_4_69()) return true;
    return false;
  }

  private boolean jj_3_57()
 {
    if (jj_3R_Load_400_5_68()) return true;
    return false;
  }

  private boolean jj_3R_Update1_383_3_67()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_57()) {
    jj_scanpos = xsp;
    if (jj_3_58()) {
    jj_scanpos = xsp;
    if (jj_3_59()) {
    jj_scanpos = xsp;
    if (jj_3_60()) {
    jj_scanpos = xsp;
    if (jj_3_61()) {
    jj_scanpos = xsp;
    if (jj_3_62()) {
    jj_scanpos = xsp;
    if (jj_3_63()) {
    jj_scanpos = xsp;
    if (jj_3_64()) {
    jj_scanpos = xsp;
    if (jj_3_65()) {
    jj_scanpos = xsp;
    if (jj_3_66()) {
    jj_scanpos = xsp;
    if (jj_3_67()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_BlankNodePropertyListPath_1146_3_127()
 {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_PropertyListPathNotEmpty_963_3_111()) return true;
    return false;
  }

  private boolean jj_3_56()
 {
    if (jj_3R_Update1_383_3_67()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_55()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_Update_376_4_66()
 {
    if (jj_3R_Prologue_122_3_152()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_56()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_185()
 {
    if (jj_3R_BlankNodePropertyListPath_1146_3_127()) return true;
    return false;
  }

  private boolean jj_3R_TriplesNodePath_1139_1_112()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_184()) {
    jj_scanpos = xsp;
    if (jj_3_185()) return true;
    }
    return false;
  }

  private boolean jj_3_184()
 {
    if (jj_3R_CollectionPath_1172_3_126()) return true;
    return false;
  }

  private boolean jj_3_54()
 {
    if (jj_scan_token(VALUES)) return true;
    if (jj_3R_DataBlock_713_3_65()) return true;
    return false;
  }

  private boolean jj_3R_ValuesClause_364_3_153()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_54()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_51()
 {
    if (jj_3R_LimitClause_352_3_64()) return true;
    return false;
  }

  private boolean jj_3R_BlankNodePropertyList_1129_3_125()
 {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_PropertyListNotEmpty_908_5_106()) return true;
    return false;
  }

  private boolean jj_3_50()
 {
    if (jj_3R_OffsetClause_358_3_63()) return true;
    return false;
  }

  private boolean jj_3R_OffsetClause_358_3_63()
 {
    if (jj_scan_token(OFFSET)) return true;
    if (jj_scan_token(INTEGER)) return true;
    return false;
  }

  private boolean jj_3_183()
 {
    if (jj_3R_BlankNodePropertyList_1129_3_125()) return true;
    return false;
  }

  private boolean jj_3R_TriplesNode_1122_1_107()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_182()) {
    jj_scanpos = xsp;
    if (jj_3_183()) return true;
    }
    return false;
  }

  private boolean jj_3_182()
 {
    if (jj_3R_Collection_1160_3_124()) return true;
    return false;
  }

  private boolean jj_3R_LimitClause_352_3_64()
 {
    if (jj_scan_token(LIMIT)) return true;
    if (jj_scan_token(INTEGER)) return true;
    return false;
  }

  private boolean jj_3_53()
 {
    if (jj_3R_OffsetClause_358_3_63()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_51()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_52()
 {
    if (jj_3R_LimitClause_352_3_64()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_50()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_LimitOffsetClauses_343_3_55()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_52()) {
    jj_scanpos = xsp;
    if (jj_3_53()) return true;
    }
    return false;
  }

  private boolean jj_3_178()
 {
    if (jj_scan_token(KW_A)) return true;
    return false;
  }

  private boolean jj_3_177()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_181()
 {
    if (jj_scan_token(CARAT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_177()) {
    jj_scanpos = xsp;
    if (jj_3_178()) return true;
    }
    return false;
  }

  private boolean jj_3_47()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_46()
 {
    if (jj_3R_Constraint_819_3_61()) return true;
    return false;
  }

  private boolean jj_3_180()
 {
    if (jj_scan_token(KW_A)) return true;
    return false;
  }

  private boolean jj_3_179()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_45()
 {
    if (jj_scan_token(DESC)) return true;
    return false;
  }

  private boolean jj_3_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_46()) {
    jj_scanpos = xsp;
    if (jj_3_47()) return true;
    }
    return false;
  }

  private boolean jj_3R_PathOneInPropertySet_1098_3_123()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_179()) {
    jj_scanpos = xsp;
    if (jj_3_180()) {
    jj_scanpos = xsp;
    if (jj_3_181()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_44()
 {
    if (jj_scan_token(ASC)) return true;
    return false;
  }

  private boolean jj_3_43()
 {
    if (jj_3R_OrderCondition_323_3_60()) return true;
    return false;
  }

  private boolean jj_3_48()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_44()) {
    jj_scanpos = xsp;
    if (jj_3_45()) return true;
    }
    if (jj_3R_BrackettedExpression_1436_5_62()) return true;
    return false;
  }

  private boolean jj_3_173()
 {
    if (jj_scan_token(VBAR)) return true;
    if (jj_3R_PathOneInPropertySet_1098_3_123()) return true;
    return false;
  }

  private boolean jj_3_174()
 {
    if (jj_3R_PathOneInPropertySet_1098_3_123()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_173()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_OrderCondition_323_3_60()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_48()) {
    jj_scanpos = xsp;
    if (jj_3_49()) return true;
    }
    return false;
  }

  private boolean jj_3_176()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_174()) jj_scanpos = xsp;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_175()
 {
    if (jj_3R_PathOneInPropertySet_1098_3_123()) return true;
    return false;
  }

  private boolean jj_3R_PathNegatedPropertySet_1084_3_121()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_175()) {
    jj_scanpos = xsp;
    if (jj_3_176()) return true;
    }
    return false;
  }

  private boolean jj_3R_OrderClause_315_3_54()
 {
    if (jj_scan_token(ORDER)) return true;
    if (jj_scan_token(BY)) return true;
    Token xsp;
    if (jj_3_43()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_43()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_42()
 {
    if (jj_3R_HavingCondition_308_3_59()) return true;
    return false;
  }

  private boolean jj_3_172()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Path_1015_3_122()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3R_HavingCondition_308_3_59()
 {
    if (jj_3R_Constraint_819_3_61()) return true;
    return false;
  }

  private boolean jj_3_171()
 {
    if (jj_scan_token(BANG)) return true;
    if (jj_3R_PathNegatedPropertySet_1084_3_121()) return true;
    return false;
  }

  private boolean jj_3_170()
 {
    if (jj_scan_token(KW_A)) return true;
    return false;
  }

  private boolean jj_3R_HavingClause_302_5_53()
 {
    if (jj_scan_token(HAVING)) return true;
    Token xsp;
    if (jj_3_42()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_42()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_169()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3R_PathPrimary_1068_3_169()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_169()) {
    jj_scanpos = xsp;
    if (jj_3_170()) {
    jj_scanpos = xsp;
    if (jj_3_171()) {
    jj_scanpos = xsp;
    if (jj_3_172()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_168()
 {
    if (jj_scan_token(PLUS)) return true;
    return false;
  }

  private boolean jj_3_167()
 {
    if (jj_scan_token(STAR)) return true;
    return false;
  }

  private boolean jj_3_36()
 {
    if (jj_3R_GroupCondition_286_3_56()) return true;
    return false;
  }

  private boolean jj_3_41()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_166()
 {
    if (jj_scan_token(QMARK)) return true;
    return false;
  }

  private boolean jj_3_37()
 {
    if (jj_scan_token(AS)) return true;
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3R_PathMod_1060_4_119()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_166()) {
    jj_scanpos = xsp;
    if (jj_3_167()) {
    jj_scanpos = xsp;
    if (jj_3_168()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_40()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_37()) jj_scanpos = xsp;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_39()
 {
    if (jj_3R_FunctionCall_829_3_58()) return true;
    return false;
  }

  private boolean jj_3_38()
 {
    if (jj_3R_BuiltInCall_1443_5_57()) return true;
    return false;
  }

  private boolean jj_3R_GroupCondition_286_3_56()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_38()) {
    jj_scanpos = xsp;
    if (jj_3_39()) {
    jj_scanpos = xsp;
    if (jj_3_40()) {
    jj_scanpos = xsp;
    if (jj_3_41()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_165()
 {
    if (jj_scan_token(CARAT)) return true;
    if (jj_3R_PathElt_1040_4_120()) return true;
    return false;
  }

  private boolean jj_3_164()
 {
    if (jj_3R_PathElt_1040_4_120()) return true;
    return false;
  }

  private boolean jj_3R_PathEltOrInverse_1049_4_118()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_164()) {
    jj_scanpos = xsp;
    if (jj_3_165()) return true;
    }
    return false;
  }

  private boolean jj_3R_GroupClause_281_3_52()
 {
    if (jj_scan_token(GROUP)) return true;
    if (jj_scan_token(BY)) return true;
    Token xsp;
    if (jj_3_36()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_36()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_35()
 {
    if (jj_3R_LimitOffsetClauses_343_3_55()) return true;
    return false;
  }

  private boolean jj_3_34()
 {
    if (jj_3R_OrderClause_315_3_54()) return true;
    return false;
  }

  private boolean jj_3_33()
 {
    if (jj_3R_HavingClause_302_5_53()) return true;
    return false;
  }

  private boolean jj_3_163()
 {
    if (jj_3R_PathMod_1060_4_119()) return true;
    return false;
  }

  private boolean jj_3_32()
 {
    if (jj_3R_GroupClause_281_3_52()) return true;
    return false;
  }

  private boolean jj_3R_PathElt_1040_4_120()
 {
    if (jj_3R_PathPrimary_1068_3_169()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_163()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_363()
 {
    if (jj_scan_token(ANON)) return true;
    return false;
  }

  private boolean jj_3R_SolutionModifier_273_3_155()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_32()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_33()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_34()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_35()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_BlankNode_1804_3_130()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_362()) {
    jj_scanpos = xsp;
    if (jj_3_363()) return true;
    }
    return false;
  }

  private boolean jj_3_362()
 {
    if (jj_scan_token(BLANK_NODE_LABEL)) return true;
    return false;
  }

  private boolean jj_3_162()
 {
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_PathEltOrInverse_1049_4_118()) return true;
    return false;
  }

  private boolean jj_3_31()
 {
    if (jj_scan_token(WHERE)) return true;
    return false;
  }

  private boolean jj_3R_PathSequence_1031_5_117()
 {
    if (jj_3R_PathEltOrInverse_1049_4_118()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_162()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_WhereClause_265_4_48()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_31()) jj_scanpos = xsp;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3_30()
 {
    if (jj_3R_NamedGraphClause_252_3_51()) return true;
    return false;
  }

  private boolean jj_3_361()
 {
    if (jj_scan_token(PNAME_NS)) return true;
    return false;
  }

  private boolean jj_3_360()
 {
    if (jj_scan_token(PNAME_LN)) return true;
    return false;
  }

  private boolean jj_3R_SourceSelector_259_3_158()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_161()
 {
    if (jj_scan_token(VBAR)) return true;
    if (jj_3R_PathSequence_1031_5_117()) return true;
    return false;
  }

  private boolean jj_3R_PrefixedName_1792_3_151()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_360()) {
    jj_scanpos = xsp;
    if (jj_3_361()) return true;
    }
    return false;
  }

  private boolean jj_3R_PathAlternative_1020_4_170()
 {
    if (jj_3R_PathSequence_1031_5_117()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_161()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_NamedGraphClause_252_3_51()
 {
    if (jj_scan_token(NAMED)) return true;
    if (jj_3R_SourceSelector_259_3_158()) return true;
    return false;
  }

  private boolean jj_3_359()
 {
    if (jj_3R_PrefixedName_1792_3_151()) return true;
    return false;
  }

  private boolean jj_3R_iri_1783_3_80()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_358()) {
    jj_scanpos = xsp;
    if (jj_3_359()) return true;
    }
    return false;
  }

  private boolean jj_3_358()
 {
    if (jj_scan_token(9)) return true;
    return false;
  }

  private boolean jj_3R_Path_1015_3_122()
 {
    if (jj_3R_PathAlternative_1020_4_170()) return true;
    return false;
  }

  private boolean jj_3R_DefaultGraphClause_246_3_50()
 {
    if (jj_3R_SourceSelector_259_3_158()) return true;
    return false;
  }

  private boolean jj_3_357()
 {
    if (jj_scan_token(STRING_LITERAL_LONG2)) return true;
    return false;
  }

  private boolean jj_3_356()
 {
    if (jj_scan_token(STRING_LITERAL_LONG1)) return true;
    return false;
  }

  private boolean jj_3_355()
 {
    if (jj_scan_token(STRING_LITERAL2)) return true;
    return false;
  }

  private boolean jj_3_29()
 {
    if (jj_3R_DefaultGraphClause_246_3_50()) return true;
    return false;
  }

  private boolean jj_3_354()
 {
    if (jj_scan_token(STRING_LITERAL1)) return true;
    return false;
  }

  private boolean jj_3R_String_1774_3_164()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_354()) {
    jj_scanpos = xsp;
    if (jj_3_355()) {
    jj_scanpos = xsp;
    if (jj_3_356()) {
    jj_scanpos = xsp;
    if (jj_3_357()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_DatasetClause_240_3_43()
 {
    if (jj_scan_token(FROM)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_29()) {
    jj_scanpos = xsp;
    if (jj_3_30()) return true;
    }
    return false;
  }

  private boolean jj_3_353()
 {
    if (jj_scan_token(FALSE)) return true;
    return false;
  }

  private boolean jj_3R_ObjectPath_1002_1_116()
 {
    if (jj_3R_GraphNodePath_1213_3_129()) return true;
    if (jj_3R_AnnotationPath_1184_3_168()) return true;
    return false;
  }

  private boolean jj_3R_BooleanLiteral_1766_3_101()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_352()) {
    jj_scanpos = xsp;
    if (jj_3_353()) return true;
    }
    return false;
  }

  private boolean jj_3_352()
 {
    if (jj_scan_token(TRUE)) return true;
    return false;
  }

  private boolean jj_3_28()
 {
    if (jj_3R_DatasetClause_240_3_43()) return true;
    return false;
  }

  private boolean jj_3_160()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_ObjectPath_1002_1_116()) return true;
    return false;
  }

  private boolean jj_3R_AskQuery_229_3_40()
 {
    if (jj_scan_token(ASK)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_28()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_WhereClause_265_4_48()) return true;
    return false;
  }

  private boolean jj_3R_ObjectListPath_995_3_115()
 {
    if (jj_3R_ObjectPath_1002_1_116()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_160()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_351()
 {
    if (jj_scan_token(DOUBLE_NEGATIVE)) return true;
    return false;
  }

  private boolean jj_3_27()
 {
    if (jj_3R_WhereClause_265_4_48()) return true;
    return false;
  }

  private boolean jj_3_350()
 {
    if (jj_scan_token(DECIMAL_NEGATIVE)) return true;
    return false;
  }

  private boolean jj_3_26()
 {
    if (jj_3R_DatasetClause_240_3_43()) return true;
    return false;
  }

  private boolean jj_3R_NumericLiteralNegative_1757_3_137()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_349()) {
    jj_scanpos = xsp;
    if (jj_3_350()) {
    jj_scanpos = xsp;
    if (jj_3_351()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_349()
 {
    if (jj_scan_token(INTEGER_NEGATIVE)) return true;
    return false;
  }

  private boolean jj_3R_VerbSimple_988_3_114()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_25()
 {
    if (jj_scan_token(STAR)) return true;
    return false;
  }

  private boolean jj_3_23()
 {
    if (jj_3R_VarOrIri_1265_3_49()) return true;
    return false;
  }

  private boolean jj_3_24()
 {
    Token xsp;
    if (jj_3_23()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_23()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_348()
 {
    if (jj_scan_token(DOUBLE_POSITIVE)) return true;
    return false;
  }

  private boolean jj_3_347()
 {
    if (jj_scan_token(DECIMAL_POSITIVE)) return true;
    return false;
  }

  private boolean jj_3R_NumericLiteralPositive_1749_3_136()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_346()) {
    jj_scanpos = xsp;
    if (jj_3_347()) {
    jj_scanpos = xsp;
    if (jj_3_348()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_346()
 {
    if (jj_scan_token(INTEGER_POSITIVE)) return true;
    return false;
  }

  private boolean jj_3R_VerbPath_981_3_113()
 {
    if (jj_3R_Path_1015_3_122()) return true;
    return false;
  }

  private boolean jj_3R_DescribeQuery_213_3_39()
 {
    if (jj_scan_token(DESCRIBE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_24()) {
    jj_scanpos = xsp;
    if (jj_3_25()) return true;
    }
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_26()) { jj_scanpos = xsp; break; }
    }
    xsp = jj_scanpos;
    if (jj_3_27()) jj_scanpos = xsp;
    if (jj_3R_SolutionModifier_273_3_155()) return true;
    return false;
  }

  private boolean jj_3_158()
 {
    if (jj_3R_VerbSimple_988_3_114()) return true;
    return false;
  }

  private boolean jj_3_157()
 {
    if (jj_3R_VerbPath_981_3_113()) return true;
    return false;
  }

  private boolean jj_3_345()
 {
    if (jj_scan_token(DOUBLE)) return true;
    return false;
  }

  private boolean jj_3_344()
 {
    if (jj_scan_token(DECIMAL)) return true;
    return false;
  }

  private boolean jj_3_20()
 {
    if (jj_3R_TriplesTemplate_577_5_46()) return true;
    return false;
  }

  private boolean jj_3_159()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_157()) {
    jj_scanpos = xsp;
    if (jj_3_158()) return true;
    }
    if (jj_3R_ObjectListPath_995_3_115()) return true;
    return false;
  }

  private boolean jj_3R_NumericLiteralUnsigned_1741_3_150()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_343()) {
    jj_scanpos = xsp;
    if (jj_3_344()) {
    jj_scanpos = xsp;
    if (jj_3_345()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_343()
 {
    if (jj_scan_token(INTEGER)) return true;
    return false;
  }

  private boolean jj_3_19()
 {
    if (jj_3R_DatasetClause_240_3_43()) return true;
    return false;
  }

  private boolean jj_3_22()
 {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_19()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(WHERE)) return true;
    if (jj_scan_token(LBRACE)) return true;
    xsp = jj_scanpos;
    if (jj_3_20()) jj_scanpos = xsp;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3_156()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_159()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_342()
 {
    if (jj_3R_NumericLiteralNegative_1757_3_137()) return true;
    return false;
  }

  private boolean jj_3_18()
 {
    if (jj_3R_DatasetClause_240_3_43()) return true;
    return false;
  }

  private boolean jj_3_341()
 {
    if (jj_3R_NumericLiteralPositive_1749_3_136()) return true;
    return false;
  }

  private boolean jj_3_155()
 {
    if (jj_3R_VerbSimple_988_3_114()) return true;
    return false;
  }

  private boolean jj_3_340()
 {
    if (jj_3R_NumericLiteralUnsigned_1741_3_150()) return true;
    return false;
  }

  private boolean jj_3_154()
 {
    if (jj_3R_VerbPath_981_3_113()) return true;
    return false;
  }

  private boolean jj_3R_PropertyListPathNotEmpty_963_3_111()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_154()) {
    jj_scanpos = xsp;
    if (jj_3_155()) return true;
    }
    if (jj_3R_ObjectListPath_995_3_115()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_156()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_21()
 {
    if (jj_3R_ConstructTemplate_873_3_47()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_18()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_WhereClause_265_4_48()) return true;
    return false;
  }

  private boolean jj_3R_NumericLiteral_1729_3_100()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_340()) {
    jj_scanpos = xsp;
    if (jj_3_341()) {
    jj_scanpos = xsp;
    if (jj_3_342()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_153()
 {
    if (jj_3R_PropertyListPathNotEmpty_963_3_111()) return true;
    return false;
  }

  private boolean jj_3R_ConstructQuery_190_2_38()
 {
    if (jj_scan_token(CONSTRUCT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_21()) {
    jj_scanpos = xsp;
    if (jj_3_22()) return true;
    }
    return false;
  }

  private boolean jj_3_338()
 {
    if (jj_scan_token(DATATYPE)) return true;
    if (jj_3R_iri_1783_3_80()) return true;
    return false;
  }

  private boolean jj_3_339()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_337()) {
    jj_scanpos = xsp;
    if (jj_3_338()) return true;
    }
    return false;
  }

  private boolean jj_3_337()
 {
    if (jj_scan_token(LANGTAG)) return true;
    return false;
  }

  private boolean jj_3_17()
 {
    if (jj_scan_token(STAR)) return true;
    return false;
  }

  private boolean jj_3_152()
 {
    if (jj_3R_TriplesNodePath_1139_1_112()) return true;
    return false;
  }

  private boolean jj_3R_RDFLiteral_1713_3_99()
 {
    if (jj_3R_String_1774_3_164()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_339()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_TriplesSameSubjectPath_945_3_163()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_151()) {
    jj_scanpos = xsp;
    if (jj_3_152()) return true;
    }
    return false;
  }

  private boolean jj_3_151()
 {
    if (jj_3R_VarOrTerm_1220_3_105()) return true;
    if (jj_3R_PropertyListPathNotEmpty_963_3_111()) return true;
    return false;
  }

  private boolean jj_3_14()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    if (jj_scan_token(AS)) return true;
    return false;
  }

  private boolean jj_3_326()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3_336()
 {
    if (jj_3R_ArgList_837_3_149()) return true;
    return false;
  }

  private boolean jj_3_13()
 {
    if (jj_3R_Var_1273_5_44()) return true;
    return false;
  }

  private boolean jj_3_15()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) return true;
    }
    return false;
  }

  private boolean jj_3_145()
 {
    if (jj_3R_PropertyListNotEmpty_908_5_106()) return true;
    return false;
  }

  private boolean jj_3R_iriOrFunction_1704_3_141()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_336()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_149()
 {
    if (jj_scan_token(KW_A)) return true;
    return false;
  }

  private boolean jj_3_16()
 {
    Token xsp;
    if (jj_3_15()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_15()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_325()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3R_Object_935_1_110()
 {
    if (jj_3R_GraphNode_1206_3_128()) return true;
    if (jj_3R_Annotation_1195_3_167()) return true;
    return false;
  }

  private boolean jj_3_324()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3_11()
 {
    if (jj_scan_token(REDUCED)) return true;
    return false;
  }

  private boolean jj_3_150()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_Object_935_1_110()) return true;
    return false;
  }

  private boolean jj_3_10()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3_12()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_10()) {
    jj_scanpos = xsp;
    if (jj_3_11()) return true;
    }
    return false;
  }

  private boolean jj_3R_ObjectList_928_3_109()
 {
    if (jj_3R_Object_935_1_110()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_150()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_323()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3R_SelectClause_159_3_154()
 {
    if (jj_scan_token(SELECT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_12()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3_17()) return true;
    }
    return false;
  }

  private boolean jj_3_328()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    if (jj_scan_token(SEPARATOR)) return true;
    if (jj_scan_token(EQ)) return true;
    return false;
  }

  private boolean jj_3_322()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3_148()
 {
    if (jj_3R_VarOrIri_1265_3_49()) return true;
    return false;
  }

  private boolean jj_3_327()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3R_Verb_922_3_108()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_148()) {
    jj_scanpos = xsp;
    if (jj_3_149()) return true;
    }
    return false;
  }

  private boolean jj_3_335()
 {
    if (jj_scan_token(GROUP_CONCAT)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_327()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_SubSelect_151_3_85()
 {
    if (jj_3R_SelectClause_159_3_154()) return true;
    if (jj_3R_WhereClause_265_4_48()) return true;
    return false;
  }

  private boolean jj_3_334()
 {
    if (jj_scan_token(SAMPLE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_326()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_147()
 {
    if (jj_3R_Verb_922_3_108()) return true;
    if (jj_3R_ObjectList_928_3_109()) return true;
    return false;
  }

  private boolean jj_3_333()
 {
    if (jj_scan_token(AVG)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_325()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_9()
 {
    if (jj_3R_DatasetClause_240_3_43()) return true;
    return false;
  }

  private boolean jj_3_146()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_147()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_PropertyListNotEmpty_908_5_106()
 {
    if (jj_3R_Verb_922_3_108()) return true;
    if (jj_3R_ObjectList_928_3_109()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_146()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_332()
 {
    if (jj_scan_token(MAX)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_324()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_SelectQuery_142_3_37()
 {
    if (jj_3R_SelectClause_159_3_154()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_9()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_WhereClause_265_4_48()) return true;
    return false;
  }

  private boolean jj_3_321()
 {
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_331()
 {
    if (jj_scan_token(MIN)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_323()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_330()
 {
    if (jj_scan_token(SUM)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_322()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_8()
 {
    if (jj_3R_PrefixDecl_133_5_42()) return true;
    return false;
  }

  private boolean jj_3R_PrefixDecl_133_5_42()
 {
    if (jj_scan_token(PREFIX)) return true;
    if (jj_scan_token(PNAME_NS)) return true;
    if (jj_scan_token(9)) return true;
    return false;
  }

  private boolean jj_3_320()
 {
    if (jj_scan_token(STAR)) return true;
    return false;
  }

  private boolean jj_3_319()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3_329()
 {
    if (jj_scan_token(COUNT)) return true;
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_319()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_320()) {
    jj_scanpos = xsp;
    if (jj_3_321()) return true;
    }
    return false;
  }

  private boolean jj_3R_Aggregate_1661_3_143()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_329()) {
    jj_scanpos = xsp;
    if (jj_3_330()) {
    jj_scanpos = xsp;
    if (jj_3_331()) {
    jj_scanpos = xsp;
    if (jj_3_332()) {
    jj_scanpos = xsp;
    if (jj_3_333()) {
    jj_scanpos = xsp;
    if (jj_3_334()) {
    jj_scanpos = xsp;
    if (jj_3_335()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_BaseDecl_127_3_41()
 {
    if (jj_scan_token(BASE)) return true;
    if (jj_scan_token(9)) return true;
    return false;
  }

  private boolean jj_3_141()
 {
    if (jj_3R_ConstructTriples_882_5_104()) return true;
    return false;
  }

  private boolean jj_3_144()
 {
    if (jj_3R_TriplesNode_1122_1_107()) return true;
    return false;
  }

  private boolean jj_3_7()
 {
    if (jj_3R_BaseDecl_127_3_41()) return true;
    return false;
  }

  private boolean jj_3_6()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) return true;
    }
    return false;
  }

  private boolean jj_3R_TriplesSameSubject_890_3_157()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_143()) {
    jj_scanpos = xsp;
    if (jj_3_144()) return true;
    }
    return false;
  }

  private boolean jj_3_143()
 {
    if (jj_3R_VarOrTerm_1220_3_105()) return true;
    if (jj_3R_PropertyListNotEmpty_908_5_106()) return true;
    return false;
  }

  private boolean jj_3R_Prologue_122_3_152()
 {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_6()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_142()
 {
    if (jj_scan_token(DOT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_141()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_ConstructTriples_882_5_104()
 {
    if (jj_3R_TriplesSameSubject_890_3_157()) return true;
    return false;
  }

  private boolean jj_3_5()
 {
    if (jj_3R_AskQuery_229_3_40()) return true;
    return false;
  }

  private boolean jj_3_4()
 {
    if (jj_3R_DescribeQuery_213_3_39()) return true;
    return false;
  }

  private boolean jj_3R_NotExistsFunc_1646_4_148()
 {
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(EXISTS)) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3_3()
 {
    if (jj_3R_ConstructQuery_190_2_38()) return true;
    return false;
  }

  private boolean jj_3_140()
 {
    if (jj_3R_ConstructTriples_882_5_104()) return true;
    return false;
  }

  private boolean jj_3R_ExistsFunc_1639_4_147()
 {
    if (jj_scan_token(EXISTS)) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3R_ConstructTemplate_873_3_47()
 {
    if (jj_scan_token(LBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_140()) jj_scanpos = xsp;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3_2()
 {
    if (jj_3R_SelectQuery_142_3_37()) return true;
    return false;
  }

  private boolean jj_3R_Query_103_3_36()
 {
    if (jj_3R_Prologue_122_3_152()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_2()) {
    jj_scanpos = xsp;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) return true;
    }
    }
    }
    if (jj_3R_ValuesClause_364_3_153()) return true;
    return false;
  }

  private boolean jj_3_318()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_137()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_StrReplaceExpression_1627_3_145()
 {
    if (jj_scan_token(REPLACE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_139()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_137()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_317()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_1()
 {
    if (jj_3R_Query_103_3_36()) return true;
    return false;
  }

  private boolean jj_3_138()
 {
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3R_ExpressionList_854_3_135()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_138()) {
    jj_scanpos = xsp;
    if (jj_3_139()) return true;
    }
    return false;
  }

  private boolean jj_3_134()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_SubstringExpression_1614_5_144()
 {
    if (jj_scan_token(SUBSTR)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_133()
 {
    if (jj_scan_token(DISTINCT)) return true;
    return false;
  }

  private boolean jj_3_316()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_136()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_133()) jj_scanpos = xsp;
    if (jj_3R_Expression_1281_3_45()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_134()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3_135()
 {
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3R_ArgList_837_3_149()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_135()) {
    jj_scanpos = xsp;
    if (jj_3_136()) return true;
    }
    return false;
  }

  private boolean jj_3R_RegexExpression_1601_5_146()
 {
    if (jj_scan_token(REGEX)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_FunctionCall_829_3_58()
 {
    if (jj_3R_iri_1783_3_80()) return true;
    if (jj_3R_ArgList_837_3_149()) return true;
    return false;
  }

  private boolean jj_3_315()
 {
    if (jj_scan_token(OBJECT)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_314()
 {
    if (jj_scan_token(PREDICATE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_313()
 {
    if (jj_scan_token(SUBJECT)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_132()
 {
    if (jj_3R_FunctionCall_829_3_58()) return true;
    return false;
  }

  private boolean jj_3_131()
 {
    if (jj_3R_BuiltInCall_1443_5_57()) return true;
    return false;
  }

  private boolean jj_3_130()
 {
    if (jj_3R_BrackettedExpression_1436_5_62()) return true;
    return false;
  }

  private boolean jj_3_312()
 {
    if (jj_scan_token(TRIPLE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_Constraint_819_3_61()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_130()) {
    jj_scanpos = xsp;
    if (jj_3_131()) {
    jj_scanpos = xsp;
    if (jj_3_132()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_311()
 {
    if (jj_scan_token(IS_TRIPLE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_310()
 {
    if (jj_3R_NotExistsFunc_1646_4_148()) return true;
    return false;
  }

  private boolean jj_3_309()
 {
    if (jj_3R_ExistsFunc_1639_4_147()) return true;
    return false;
  }

  private boolean jj_3R_Filter_812_3_93()
 {
    if (jj_scan_token(FILTER)) return true;
    if (jj_3R_Constraint_819_3_61()) return true;
    return false;
  }

  private boolean jj_3_308()
 {
    if (jj_3R_RegexExpression_1601_5_146()) return true;
    return false;
  }

  private boolean jj_3_307()
 {
    if (jj_scan_token(IS_NUMERIC)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_306()
 {
    if (jj_scan_token(IS_LITERAL)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_305()
 {
    if (jj_scan_token(IS_BLANK)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_304()
 {
    if (jj_scan_token(IS_URI)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_129()
 {
    if (jj_scan_token(UNION)) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3_303()
 {
    if (jj_scan_token(IS_IRI)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_GroupOrUnionGraphPattern_794_3_88()
 {
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_129()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_302()
 {
    if (jj_scan_token(SAME_TERM)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_301()
 {
    if (jj_scan_token(STRDT)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_300()
 {
    if (jj_scan_token(STRLANG)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_299()
 {
    if (jj_scan_token(IF)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_298()
 {
    if (jj_scan_token(COALESCE)) return true;
    if (jj_3R_ExpressionList_854_3_135()) return true;
    return false;
  }

  private boolean jj_3_297()
 {
    if (jj_scan_token(SHA512)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3R_MinusGraphPattern_772_5_90()
 {
    if (jj_scan_token(MINUS_P)) return true;
    if (jj_3R_GroupGraphPattern_585_3_103()) return true;
    return false;
  }

  private boolean jj_3_296()
 {
    if (jj_scan_token(SHA384)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_295()
 {
    if (jj_scan_token(SHA256)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_294()
 {
    if (jj_scan_token(SHA1)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_293()
 {
    if (jj_scan_token(MD5)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_Expression_1281_3_45()) return true;
    return false;
  }

  private boolean jj_3_292()
 {
    if (jj_scan_token(STRUUID)) return true;
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_291()
 {
    if (jj_scan_token(UUID)) return true;
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_128()
 {
    if (jj_3R_QuotedTripleData_1245_3_102()) return true;
    return false;
  }

  private boolean jj_3_290()
 {
    if (jj_scan_token(NOW)) return true;
    if (jj_scan_token(NIL)) return true;
    return false;
  }

  private boolean jj_3_127()
 {
    if (jj_scan_token(UNDEF)) return true;
    return false;
  }

  /** Generated Token Manager. */
  public SparqlParserTokenManager token_source;
  JavaCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[0];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static private int[] jj_la1_3;
  static private int[] jj_la1_4;
  static private int[] jj_la1_5;
  static private int[] jj_la1_6;
  static {
	   jj_la1_init_0();
	   jj_la1_init_1();
	   jj_la1_init_2();
	   jj_la1_init_3();
	   jj_la1_init_4();
	   jj_la1_init_5();
	   jj_la1_init_6();
	}
	private static void jj_la1_init_0() {
	   jj_la1_0 = new int[] {};
	}
	private static void jj_la1_init_1() {
	   jj_la1_1 = new int[] {};
	}
	private static void jj_la1_init_2() {
	   jj_la1_2 = new int[] {};
	}
	private static void jj_la1_init_3() {
	   jj_la1_3 = new int[] {};
	}
	private static void jj_la1_init_4() {
	   jj_la1_4 = new int[] {};
	}
	private static void jj_la1_init_5() {
	   jj_la1_5 = new int[] {};
	}
	private static void jj_la1_init_6() {
	   jj_la1_6 = new int[] {};
	}
  final private JJCalls[] jj_2_rtns = new JJCalls[363];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public SparqlParser(java.io.InputStream stream) {
	  this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public SparqlParser(java.io.InputStream stream, String encoding) {
	 try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source = new SparqlParserTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
	  ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
	 try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 0; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public SparqlParser(java.io.Reader stream) {
	 jj_input_stream = new JavaCharStream(stream, 1, 1);
	 token_source = new SparqlParserTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
	if (jj_input_stream == null) {
	   jj_input_stream = new JavaCharStream(stream, 1, 1);
	} else {
	   jj_input_stream.ReInit(stream, 1, 1);
	}
	if (token_source == null) {
 token_source = new SparqlParserTokenManager(jj_input_stream);
	}

	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public SparqlParser(SparqlParserTokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(SparqlParserTokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
	 Token oldToken;
	 if ((oldToken = token).next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 if (token.kind == kind) {
	   jj_gen++;
	   if (++jj_gc > 100) {
		 jj_gc = 0;
		 for (int i = 0; i < jj_2_rtns.length; i++) {
		   JJCalls c = jj_2_rtns[i];
		   while (c != null) {
			 if (c.gen < jj_gen) c.first = null;
			 c = c.next;
		   }
		 }
	   }
	   return token;
	 }
	 token = oldToken;
	 jj_kind = kind;
	 throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error {
    @Override
    public Throwable fillInStackTrace() {
      return this;
    }
  }
  static private final LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
	 if (jj_scanpos == jj_lastpos) {
	   jj_la--;
	   if (jj_scanpos.next == null) {
		 jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
	   } else {
		 jj_lastpos = jj_scanpos = jj_scanpos.next;
	   }
	 } else {
	   jj_scanpos = jj_scanpos.next;
	 }
	 if (jj_rescan) {
	   int i = 0; Token tok = token;
	   while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
	   if (tok != null) jj_add_error_token(kind, i);
	 }
	 if (jj_scanpos.kind != kind) return true;
	 if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
	 return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
	 if (token.next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 jj_gen++;
	 return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
	 Token t = token;
	 for (int i = 0; i < index; i++) {
	   if (t.next != null) t = t.next;
	   else t = t.next = token_source.getNextToken();
	 }
	 return t;
  }

  private int jj_ntk_f() {
	 if ((jj_nt=token.next) == null)
	   return (jj_ntk = (token.next=token_source.getNextToken()).kind);
	 else
	   return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
	 if (pos >= 100) {
		return;
	 }

	 if (pos == jj_endpos + 1) {
	   jj_lasttokens[jj_endpos++] = kind;
	 } else if (jj_endpos != 0) {
	   jj_expentry = new int[jj_endpos];

	   for (int i = 0; i < jj_endpos; i++) {
		 jj_expentry[i] = jj_lasttokens[i];
	   }

	   for (int[] oldentry : jj_expentries) {
		 if (oldentry.length == jj_expentry.length) {
		   boolean isMatched = true;

		   for (int i = 0; i < jj_expentry.length; i++) {
			 if (oldentry[i] != jj_expentry[i]) {
			   isMatched = false;
			   break;
			 }

		   }
		   if (isMatched) {
			 jj_expentries.add(jj_expentry);
			 break;
		   }
		 }
	   }

	   if (pos != 0) {
		 jj_lasttokens[(jj_endpos = pos) - 1] = kind;
	   }
	 }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
	 jj_expentries.clear();
	 boolean[] la1tokens = new boolean[217];
	 if (jj_kind >= 0) {
	   la1tokens[jj_kind] = true;
	   jj_kind = -1;
	 }
	 for (int i = 0; i < 0; i++) {
	   if (jj_la1[i] == jj_gen) {
		 for (int j = 0; j < 32; j++) {
		   if ((jj_la1_0[i] & (1<<j)) != 0) {
			 la1tokens[j] = true;
		   }
		   if ((jj_la1_1[i] & (1<<j)) != 0) {
			 la1tokens[32+j] = true;
		   }
		   if ((jj_la1_2[i] & (1<<j)) != 0) {
			 la1tokens[64+j] = true;
		   }
		   if ((jj_la1_3[i] & (1<<j)) != 0) {
			 la1tokens[96+j] = true;
		   }
		   if ((jj_la1_4[i] & (1<<j)) != 0) {
			 la1tokens[128+j] = true;
		   }
		   if ((jj_la1_5[i] & (1<<j)) != 0) {
			 la1tokens[160+j] = true;
		   }
		   if ((jj_la1_6[i] & (1<<j)) != 0) {
			 la1tokens[192+j] = true;
		   }
		 }
	   }
	 }
	 for (int i = 0; i < 217; i++) {
	   if (la1tokens[i]) {
		 jj_expentry = new int[1];
		 jj_expentry[0] = i;
		 jj_expentries.add(jj_expentry);
	   }
	 }
	 jj_endpos = 0;
	 jj_rescan_token();
	 jj_add_error_token(0, 0);
	 int[][] exptokseq = new int[jj_expentries.size()][];
	 for (int i = 0; i < jj_expentries.size(); i++) {
	   exptokseq[i] = jj_expentries.get(i);
	 }
	 return new ParseException(token, exptokseq, tokenImage);
  }

  private boolean trace_enabled;

/** Trace enabled. */
  final public boolean trace_enabled() {
	 return trace_enabled;
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
	 jj_rescan = true;
	 for (int i = 0; i < 363; i++) {
	   try {
		 JJCalls p = jj_2_rtns[i];

		 do {
		   if (p.gen > jj_gen) {
			 jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
			 switch (i) {
			   case 0: jj_3_1(); break;
			   case 1: jj_3_2(); break;
			   case 2: jj_3_3(); break;
			   case 3: jj_3_4(); break;
			   case 4: jj_3_5(); break;
			   case 5: jj_3_6(); break;
			   case 6: jj_3_7(); break;
			   case 7: jj_3_8(); break;
			   case 8: jj_3_9(); break;
			   case 9: jj_3_10(); break;
			   case 10: jj_3_11(); break;
			   case 11: jj_3_12(); break;
			   case 12: jj_3_13(); break;
			   case 13: jj_3_14(); break;
			   case 14: jj_3_15(); break;
			   case 15: jj_3_16(); break;
			   case 16: jj_3_17(); break;
			   case 17: jj_3_18(); break;
			   case 18: jj_3_19(); break;
			   case 19: jj_3_20(); break;
			   case 20: jj_3_21(); break;
			   case 21: jj_3_22(); break;
			   case 22: jj_3_23(); break;
			   case 23: jj_3_24(); break;
			   case 24: jj_3_25(); break;
			   case 25: jj_3_26(); break;
			   case 26: jj_3_27(); break;
			   case 27: jj_3_28(); break;
			   case 28: jj_3_29(); break;
			   case 29: jj_3_30(); break;
			   case 30: jj_3_31(); break;
			   case 31: jj_3_32(); break;
			   case 32: jj_3_33(); break;
			   case 33: jj_3_34(); break;
			   case 34: jj_3_35(); break;
			   case 35: jj_3_36(); break;
			   case 36: jj_3_37(); break;
			   case 37: jj_3_38(); break;
			   case 38: jj_3_39(); break;
			   case 39: jj_3_40(); break;
			   case 40: jj_3_41(); break;
			   case 41: jj_3_42(); break;
			   case 42: jj_3_43(); break;
			   case 43: jj_3_44(); break;
			   case 44: jj_3_45(); break;
			   case 45: jj_3_46(); break;
			   case 46: jj_3_47(); break;
			   case 47: jj_3_48(); break;
			   case 48: jj_3_49(); break;
			   case 49: jj_3_50(); break;
			   case 50: jj_3_51(); break;
			   case 51: jj_3_52(); break;
			   case 52: jj_3_53(); break;
			   case 53: jj_3_54(); break;
			   case 54: jj_3_55(); break;
			   case 55: jj_3_56(); break;
			   case 56: jj_3_57(); break;
			   case 57: jj_3_58(); break;
			   case 58: jj_3_59(); break;
			   case 59: jj_3_60(); break;
			   case 60: jj_3_61(); break;
			   case 61: jj_3_62(); break;
			   case 62: jj_3_63(); break;
			   case 63: jj_3_64(); break;
			   case 64: jj_3_65(); break;
			   case 65: jj_3_66(); break;
			   case 66: jj_3_67(); break;
			   case 67: jj_3_68(); break;
			   case 68: jj_3_69(); break;
			   case 69: jj_3_70(); break;
			   case 70: jj_3_71(); break;
			   case 71: jj_3_72(); break;
			   case 72: jj_3_73(); break;
			   case 73: jj_3_74(); break;
			   case 74: jj_3_75(); break;
			   case 75: jj_3_76(); break;
			   case 76: jj_3_77(); break;
			   case 77: jj_3_78(); break;
			   case 78: jj_3_79(); break;
			   case 79: jj_3_80(); break;
			   case 80: jj_3_81(); break;
			   case 81: jj_3_82(); break;
			   case 82: jj_3_83(); break;
			   case 83: jj_3_84(); break;
			   case 84: jj_3_85(); break;
			   case 85: jj_3_86(); break;
			   case 86: jj_3_87(); break;
			   case 87: jj_3_88(); break;
			   case 88: jj_3_89(); break;
			   case 89: jj_3_90(); break;
			   case 90: jj_3_91(); break;
			   case 91: jj_3_92(); break;
			   case 92: jj_3_93(); break;
			   case 93: jj_3_94(); break;
			   case 94: jj_3_95(); break;
			   case 95: jj_3_96(); break;
			   case 96: jj_3_97(); break;
			   case 97: jj_3_98(); break;
			   case 98: jj_3_99(); break;
			   case 99: jj_3_100(); break;
			   case 100: jj_3_101(); break;
			   case 101: jj_3_102(); break;
			   case 102: jj_3_103(); break;
			   case 103: jj_3_104(); break;
			   case 104: jj_3_105(); break;
			   case 105: jj_3_106(); break;
			   case 106: jj_3_107(); break;
			   case 107: jj_3_108(); break;
			   case 108: jj_3_109(); break;
			   case 109: jj_3_110(); break;
			   case 110: jj_3_111(); break;
			   case 111: jj_3_112(); break;
			   case 112: jj_3_113(); break;
			   case 113: jj_3_114(); break;
			   case 114: jj_3_115(); break;
			   case 115: jj_3_116(); break;
			   case 116: jj_3_117(); break;
			   case 117: jj_3_118(); break;
			   case 118: jj_3_119(); break;
			   case 119: jj_3_120(); break;
			   case 120: jj_3_121(); break;
			   case 121: jj_3_122(); break;
			   case 122: jj_3_123(); break;
			   case 123: jj_3_124(); break;
			   case 124: jj_3_125(); break;
			   case 125: jj_3_126(); break;
			   case 126: jj_3_127(); break;
			   case 127: jj_3_128(); break;
			   case 128: jj_3_129(); break;
			   case 129: jj_3_130(); break;
			   case 130: jj_3_131(); break;
			   case 131: jj_3_132(); break;
			   case 132: jj_3_133(); break;
			   case 133: jj_3_134(); break;
			   case 134: jj_3_135(); break;
			   case 135: jj_3_136(); break;
			   case 136: jj_3_137(); break;
			   case 137: jj_3_138(); break;
			   case 138: jj_3_139(); break;
			   case 139: jj_3_140(); break;
			   case 140: jj_3_141(); break;
			   case 141: jj_3_142(); break;
			   case 142: jj_3_143(); break;
			   case 143: jj_3_144(); break;
			   case 144: jj_3_145(); break;
			   case 145: jj_3_146(); break;
			   case 146: jj_3_147(); break;
			   case 147: jj_3_148(); break;
			   case 148: jj_3_149(); break;
			   case 149: jj_3_150(); break;
			   case 150: jj_3_151(); break;
			   case 151: jj_3_152(); break;
			   case 152: jj_3_153(); break;
			   case 153: jj_3_154(); break;
			   case 154: jj_3_155(); break;
			   case 155: jj_3_156(); break;
			   case 156: jj_3_157(); break;
			   case 157: jj_3_158(); break;
			   case 158: jj_3_159(); break;
			   case 159: jj_3_160(); break;
			   case 160: jj_3_161(); break;
			   case 161: jj_3_162(); break;
			   case 162: jj_3_163(); break;
			   case 163: jj_3_164(); break;
			   case 164: jj_3_165(); break;
			   case 165: jj_3_166(); break;
			   case 166: jj_3_167(); break;
			   case 167: jj_3_168(); break;
			   case 168: jj_3_169(); break;
			   case 169: jj_3_170(); break;
			   case 170: jj_3_171(); break;
			   case 171: jj_3_172(); break;
			   case 172: jj_3_173(); break;
			   case 173: jj_3_174(); break;
			   case 174: jj_3_175(); break;
			   case 175: jj_3_176(); break;
			   case 176: jj_3_177(); break;
			   case 177: jj_3_178(); break;
			   case 178: jj_3_179(); break;
			   case 179: jj_3_180(); break;
			   case 180: jj_3_181(); break;
			   case 181: jj_3_182(); break;
			   case 182: jj_3_183(); break;
			   case 183: jj_3_184(); break;
			   case 184: jj_3_185(); break;
			   case 185: jj_3_186(); break;
			   case 186: jj_3_187(); break;
			   case 187: jj_3_188(); break;
			   case 188: jj_3_189(); break;
			   case 189: jj_3_190(); break;
			   case 190: jj_3_191(); break;
			   case 191: jj_3_192(); break;
			   case 192: jj_3_193(); break;
			   case 193: jj_3_194(); break;
			   case 194: jj_3_195(); break;
			   case 195: jj_3_196(); break;
			   case 196: jj_3_197(); break;
			   case 197: jj_3_198(); break;
			   case 198: jj_3_199(); break;
			   case 199: jj_3_200(); break;
			   case 200: jj_3_201(); break;
			   case 201: jj_3_202(); break;
			   case 202: jj_3_203(); break;
			   case 203: jj_3_204(); break;
			   case 204: jj_3_205(); break;
			   case 205: jj_3_206(); break;
			   case 206: jj_3_207(); break;
			   case 207: jj_3_208(); break;
			   case 208: jj_3_209(); break;
			   case 209: jj_3_210(); break;
			   case 210: jj_3_211(); break;
			   case 211: jj_3_212(); break;
			   case 212: jj_3_213(); break;
			   case 213: jj_3_214(); break;
			   case 214: jj_3_215(); break;
			   case 215: jj_3_216(); break;
			   case 216: jj_3_217(); break;
			   case 217: jj_3_218(); break;
			   case 218: jj_3_219(); break;
			   case 219: jj_3_220(); break;
			   case 220: jj_3_221(); break;
			   case 221: jj_3_222(); break;
			   case 222: jj_3_223(); break;
			   case 223: jj_3_224(); break;
			   case 224: jj_3_225(); break;
			   case 225: jj_3_226(); break;
			   case 226: jj_3_227(); break;
			   case 227: jj_3_228(); break;
			   case 228: jj_3_229(); break;
			   case 229: jj_3_230(); break;
			   case 230: jj_3_231(); break;
			   case 231: jj_3_232(); break;
			   case 232: jj_3_233(); break;
			   case 233: jj_3_234(); break;
			   case 234: jj_3_235(); break;
			   case 235: jj_3_236(); break;
			   case 236: jj_3_237(); break;
			   case 237: jj_3_238(); break;
			   case 238: jj_3_239(); break;
			   case 239: jj_3_240(); break;
			   case 240: jj_3_241(); break;
			   case 241: jj_3_242(); break;
			   case 242: jj_3_243(); break;
			   case 243: jj_3_244(); break;
			   case 244: jj_3_245(); break;
			   case 245: jj_3_246(); break;
			   case 246: jj_3_247(); break;
			   case 247: jj_3_248(); break;
			   case 248: jj_3_249(); break;
			   case 249: jj_3_250(); break;
			   case 250: jj_3_251(); break;
			   case 251: jj_3_252(); break;
			   case 252: jj_3_253(); break;
			   case 253: jj_3_254(); break;
			   case 254: jj_3_255(); break;
			   case 255: jj_3_256(); break;
			   case 256: jj_3_257(); break;
			   case 257: jj_3_258(); break;
			   case 258: jj_3_259(); break;
			   case 259: jj_3_260(); break;
			   case 260: jj_3_261(); break;
			   case 261: jj_3_262(); break;
			   case 262: jj_3_263(); break;
			   case 263: jj_3_264(); break;
			   case 264: jj_3_265(); break;
			   case 265: jj_3_266(); break;
			   case 266: jj_3_267(); break;
			   case 267: jj_3_268(); break;
			   case 268: jj_3_269(); break;
			   case 269: jj_3_270(); break;
			   case 270: jj_3_271(); break;
			   case 271: jj_3_272(); break;
			   case 272: jj_3_273(); break;
			   case 273: jj_3_274(); break;
			   case 274: jj_3_275(); break;
			   case 275: jj_3_276(); break;
			   case 276: jj_3_277(); break;
			   case 277: jj_3_278(); break;
			   case 278: jj_3_279(); break;
			   case 279: jj_3_280(); break;
			   case 280: jj_3_281(); break;
			   case 281: jj_3_282(); break;
			   case 282: jj_3_283(); break;
			   case 283: jj_3_284(); break;
			   case 284: jj_3_285(); break;
			   case 285: jj_3_286(); break;
			   case 286: jj_3_287(); break;
			   case 287: jj_3_288(); break;
			   case 288: jj_3_289(); break;
			   case 289: jj_3_290(); break;
			   case 290: jj_3_291(); break;
			   case 291: jj_3_292(); break;
			   case 292: jj_3_293(); break;
			   case 293: jj_3_294(); break;
			   case 294: jj_3_295(); break;
			   case 295: jj_3_296(); break;
			   case 296: jj_3_297(); break;
			   case 297: jj_3_298(); break;
			   case 298: jj_3_299(); break;
			   case 299: jj_3_300(); break;
			   case 300: jj_3_301(); break;
			   case 301: jj_3_302(); break;
			   case 302: jj_3_303(); break;
			   case 303: jj_3_304(); break;
			   case 304: jj_3_305(); break;
			   case 305: jj_3_306(); break;
			   case 306: jj_3_307(); break;
			   case 307: jj_3_308(); break;
			   case 308: jj_3_309(); break;
			   case 309: jj_3_310(); break;
			   case 310: jj_3_311(); break;
			   case 311: jj_3_312(); break;
			   case 312: jj_3_313(); break;
			   case 313: jj_3_314(); break;
			   case 314: jj_3_315(); break;
			   case 315: jj_3_316(); break;
			   case 316: jj_3_317(); break;
			   case 317: jj_3_318(); break;
			   case 318: jj_3_319(); break;
			   case 319: jj_3_320(); break;
			   case 320: jj_3_321(); break;
			   case 321: jj_3_322(); break;
			   case 322: jj_3_323(); break;
			   case 323: jj_3_324(); break;
			   case 324: jj_3_325(); break;
			   case 325: jj_3_326(); break;
			   case 326: jj_3_327(); break;
			   case 327: jj_3_328(); break;
			   case 328: jj_3_329(); break;
			   case 329: jj_3_330(); break;
			   case 330: jj_3_331(); break;
			   case 331: jj_3_332(); break;
			   case 332: jj_3_333(); break;
			   case 333: jj_3_334(); break;
			   case 334: jj_3_335(); break;
			   case 335: jj_3_336(); break;
			   case 336: jj_3_337(); break;
			   case 337: jj_3_338(); break;
			   case 338: jj_3_339(); break;
			   case 339: jj_3_340(); break;
			   case 340: jj_3_341(); break;
			   case 341: jj_3_342(); break;
			   case 342: jj_3_343(); break;
			   case 343: jj_3_344(); break;
			   case 344: jj_3_345(); break;
			   case 345: jj_3_346(); break;
			   case 346: jj_3_347(); break;
			   case 347: jj_3_348(); break;
			   case 348: jj_3_349(); break;
			   case 349: jj_3_350(); break;
			   case 350: jj_3_351(); break;
			   case 351: jj_3_352(); break;
			   case 352: jj_3_353(); break;
			   case 353: jj_3_354(); break;
			   case 354: jj_3_355(); break;
			   case 355: jj_3_356(); break;
			   case 356: jj_3_357(); break;
			   case 357: jj_3_358(); break;
			   case 358: jj_3_359(); break;
			   case 359: jj_3_360(); break;
			   case 360: jj_3_361(); break;
			   case 361: jj_3_362(); break;
			   case 362: jj_3_363(); break;
			 }
		   }
		   p = p.next;
		 } while (p != null);

		 } catch(LookaheadSuccess ls) { }
	 }
	 jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
	 JJCalls p = jj_2_rtns[index];
	 while (p.gen > jj_gen) {
	   if (p.next == null) { p = p.next = new JJCalls(); break; }
	   p = p.next;
	 }

	 p.gen = jj_gen + xla - jj_la; 
	 p.first = token;
	 p.arg = xla;
  }

  static final class JJCalls {
	 int gen;
	 Token first;
	 int arg;
	 JJCalls next;
  }

}
